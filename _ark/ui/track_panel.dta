#define TRACK_END_FRAME
(1920)
#define TRACK_PANEL_HANDLERS
((enter
      {game add_sink $this}
      {$this
         set_showing
         {gamemode get show_track}})
   (exit
      {game remove_sink $this})
   (unison_hit)
   (unison_miss)
   (set_track_out)
   (set_track_in)
   (animate_track
      ($start $end $period $units))
   (animate_track_out)
   (animate_track_out_fast)
   (animate_track_in_fast)
   (finish_load
      {$this set_showing FALSE}
      {$this set_track_out})
   (intro_start
      {$this reset}
      {$this
         set_showing
         {gamemode get show_track}}
      {$this set_track_in})
   (intro_skip
      {$this reset}
      {$this
         set_showing
         {gamemode get show_track}}
      {$this set_track_out}
      {$this play_intro})
   (on_reset
      {beatmatch
         foreach_active_player
         $m
         {$m on_new_track}
         {{$m track}
            init
            {$m track}}}
      {{$this loaded_dir}
         reset})
   (on_extend
  
   {if $voxhwcustomtexture 
      {{$this find vocal_bg.tex} set_bitmap {sprint "track/voxhw/vocal_bg_" $voxhw ".png"}}
   }
   {if $gemcustomtexture
      {{$this find prism_gems.tex} set_bitmap {sprint "track/gems/prism_gems_" $gem ".png"}}
	  {{$this find prism_gem_emissive.tex} set_bitmap {sprint "track/gems/prism_gem_emissive_" $gem ".png"}}
	  {{$this find prism_gem_emissive_3_player.tex} set_bitmap {sprint "track/gems/prism_gem_emissive_3_player_" $gem ".png"}}
	  {{$this find prism_gem_emissive_dynamic.tex} set_bitmap {sprint "track/gems/prism_gem_emissive_dynamic_" $gem ".png"}}
	  {{$this find prism_gem_emissive_dynamic_red.tex} set_bitmap {sprint "track/gems/prism_gem_emissive_dynamic_red_" $gem ".png"}}
	  {{$this find prism_green.tex} set_bitmap {sprint "track/gems/prism_green_" $gem ".png"}}
	  {{$this find prism_red.tex} set_bitmap {sprint "track/gems/prism_red_" $gem ".png"}}
     {{$this find prism_spotlight.tex} set_bitmap {sprint "track/gems/prism_spotlight_" $gem ".png"}}
   }

   {if $smashercustomtexture
   {do
      {{$this find black_smasher_blue_nomip.tex} set_bitmap {sprint "track_new/smashers/black_smasher_blue_" $smasher ".png"}}
      {{$this find black_smasher_green_nomip.tex} set_bitmap {sprint "track_new/smashers/black_smasher_green_" $smasher ".png"}}
      {{$this find black_smasher_norm.tex} set_bitmap {sprint "track_new/smashers/black_smasher_norm_" $smasher ".png"}}
   ;   {{$this find black_smasher_spec.tex} set_bitmap {sprint "track_new/smashers/black_smasher_spec_" $smasher ".png"}}
      {{$this find black_smasher_norm_drums.tex} set_bitmap {sprint "track_new/smashers/black_smasher_norm_drums_" $smasher ".png"}}
      {{$this find black_smasher_orange_nomip.tex} set_bitmap {sprint "track_new/smashers/black_smasher_orange_" $smasher ".png"}}
      {{$this find black_smasher_red_nomip.tex} set_bitmap {sprint "track_new/smashers/black_smasher_red_" $smasher ".png"}}
      {{$this find black_smasher_yellow_nomip.tex} set_bitmap {sprint "track_new/smashers/black_smasher_yellow_" $smasher ".png"}}
      {{$this find square_smasher_bright_blue.tex} set_bitmap {sprint "track_new/smashers/square_smasher_bright_blue_" $smasher ".png"}}
      {{$this find square_smasher_bright_green.tex} set_bitmap {sprint "track_new/smashers/square_smasher_bright_green_" $smasher ".png"}}
      {{$this find square_smasher_bright_orange.tex} set_bitmap {sprint "track_new/smashers/square_smasher_bright_orange_" $smasher ".png"}}
      {{$this find square_smasher_bright_red.tex} set_bitmap {sprint "track_new/smashers/square_smasher_bright_red_" $smasher ".png"}}
      {{$this find square_smasher_bright_yellow.tex} set_bitmap {sprint "track_new/smashers/square_smasher_bright_yellow_" $smasher ".png"}}
   }
   }

   {if $flamescustomtexture
      {{$this find radial_shockwave.tex} set_bitmap {sprint "track_new/flames/radial_shockwave_" $flames ".png"}}
      {{$this find radial_shockwave_subtract.tex} set_bitmap {sprint "track_new/flames/radial_shockwave_subtract_" $flames ".png"}}
      {{$this find shockwave.tex} set_bitmap {sprint "track_new/flames/shockwave_" $flames ".png"}}
      {{$this find flare_green.tex} set_bitmap {sprint "track_new/flames/flare_green_" $flames ".png"}}
      {{$this find flare_red.tex} set_bitmap {sprint "track_new/flames/flare_red_" $flames ".png"}}
      {{$this find flare_yellow.tex} set_bitmap {sprint "track_new/flames/flare_yellow_" $flames ".png"}}
      {{$this find flare_blue.tex} set_bitmap {sprint "track_new/flames/flare_blue_" $flames ".png"}}
      {{$this find flare_orange.tex} set_bitmap {sprint "track_new/flames/flare_orange_" $flames ".png"}}
      {{$this find flare_orange_kick_smasher.tex} set_bitmap {sprint "track_new/flames/flare_orange_kick_smasher_" $flames ".png"}}
      {{$this find flare_style.tex} set_bitmap {sprint "track_new/flames/flare_style_" $flames ".png"}}
      {{$this find flare_light_can_star.tex} set_bitmap {sprint "track_new/flames/flare_light_can_star_" $flames ".png"}}
      {{$this find broken_glass01.tex} set_bitmap {sprint "track_new/flames/broken_glass01_" $flames ".png"}}
      {{$this find broken_glass02.tex} set_bitmap {sprint "track_new/flames/broken_glass02_" $flames ".png"}}
      {{$this find gem_cap.tex} set_bitmap {sprint "track_new/flames/gem_cap_" $flames ".png"}}
      {{$this find spark.tex} set_bitmap {sprint "track_new/flames/sparks_" $flames ".png"}}
      {{$this find sparks.tex} set_bitmap {sprint "track_new/flames/sparks_" $flames ".png"}}
   }
   
   {if $voxarrowcustomtexture
      {{$this find pitch_arrow_split.tex} set_bitmap {sprint "track/voxarrow/pitch_arrow_split_" $voxarrow ".png"}}
   }
   
   {if $voxnotescustomtexture
	  {{$this find 3d_tube_pitched.tex} set_bitmap {sprint "track/voxnotes/3d_tube_pitched_" $voxnotes ".png"}}
	  {{$this find tube_1.tex} set_bitmap {sprint "track/voxnotes/3d_tube_pitched_star_anim1_" $voxnotes ".png"}}
	  {{$this find tube_2.tex} set_bitmap {sprint "track/voxnotes/3d_tube_pitched_star_anim2_" $voxnotes ".png"}}
	  {{$this find tube_3.tex} set_bitmap {sprint "track/voxnotes/3d_tube_pitched_star_anim3_" $voxnotes ".png"}}
	  {{$this find tube_4.tex} set_bitmap {sprint "track/voxnotes/3d_tube_pitched_star_anim4_" $voxnotes ".png"}}
   }
   
   {if $voxodcustomtexture
	  {{$this find sunburst.tex} set_bitmap {sprint "track/voxod/sunburst_" $voxod ".png"}}
	  {{$this find freestyle_nowbar_FX.tex} set_bitmap {sprint "track/voxod/vox_now_bar_effect_" $voxod ".png"}}
   }

   {if $scorecustomtexture
      {{$this find indv_player_meter_circle.tex} set_bitmap {sprint "track/score/indv_player_meter_circle_" $scoretex ".png"}}
      {{$this find indv_player_meter_glass.tex} set_bitmap {sprint "track/score/indv_player_meter_glass_" $scoretex ".png"}}
	  {{$this find indv_player_meter_glow.tex} set_bitmap {sprint "track/score/indv_player_meter_glow_" $scoretex ".png"}}
	  {{$this find indv_player_meter.png} set_bitmap {sprint "track/score/indv_player_meter_" $scoretex ".png"}}
	  {{$this find star_sheet.tex} set_bitmap {sprint "track/score/star_power_" $scoretex ".png"}}
	;  {{$this find score_meter_wipe.tex} set_bitmap {sprint "track/score/score_meter_wipe_" $scoretex ".png"}}
   }

   {if $odbarcustomtexture
;      {{$this find rb2_player_meter_background.tex} set_bitmap {sprint "track/overdrive_bar/player_meter_background_" $odbar ".png"}}
;      {{$this find player_meter_long.tex} set_bitmap {sprint "track/overdrive_bar/player_meter_long_" $odbar ".png"}}
	   {{$this find rising_sun_fx_small.tex} set_bitmap {sprint "track/overdrive_bar/rising_sun_fx_small_" $odbar ".png"}}
     {{$this find indv_player_meter_bar.tex} set_bitmap {sprint "track/overdrive_bar/indv_player_meter_bar_" $odbar ".png"}}
   }

   {if $multiringcustomtexture
      {{$this find multiplier_cap_glass_vox.tex} set_bitmap {sprint "track/multiplier_ring/multiplier_cap_glass_vox_" $multiring ".png"}}
      {{$this find multiplier_meter_glow.tex} set_bitmap {sprint "track/multiplier_ring/multiplier_meter_glow_" $multiring ".png"}}
      {{$this find multiplier_meter.tex} set_bitmap {sprint "track/multiplier_ring/multiplier_meter_" $multiring ".png"}}
      {{$this find multiplier_meter_solid..tex} set_bitmap {sprint "track/multiplier_ring/multiplier_meter_solid_" $multiring ".png"}}
   }

   {if $streakcustomtexture
      {{$this find bass_superstreak_pattern.tex} set_bitmap {sprint "track_new/streak/" $streak ".png"}}
   }

   {if $railscustomtexture
      {{$this find rails.tex} set_bitmap {sprint "track/rails/rails_" $rails ".png"}}
      {{$this find rails.tex} iterate_refs $ref {$ref set intensify {!= $rails "rb2"}}}
   }

   {if $spotlightcustomtexture
      {{$this find spotlight_bass_track.tex} set_bitmap {sprint "track_new/spotlight/" $spotlight ".png"}}
      {{$this find spotlight_guitar_track.tex} set_bitmap {sprint "track_new/spotlight/" $spotlight ".png"}}
      {{$this find spotlight_drums_track.tex} set_bitmap {sprint "track_new/spotlight/" $spotlight ".png"}}
      {if_else {exists {sprint "track_new/spotlight/" $spotlight "_emissive.png"}}
         {do
            {{$this find spotlight_bass_track_emissive.tex} set_bitmap {sprint "track_new/spotlight/" $spotlight "_emissive.png"}}
            {{$this find spotlight_guitar_track_emmissive.tex} set_bitmap {sprint "track_new/spotlight/" $spotlight "_emissive.png"}}
         }
         {do
            {{$this find spotlight_bass_track_emissive.tex} set_bitmap "track/custom_track_textures/_no_highway.png"}
            {{$this find spotlight_guitar_track_emmissive.tex} set_bitmap "track/custom_track_textures/_no_highway.png"}
         }
      }
   }

;after all of the queued texture updates are completed, set them to false so they do not run again until a new texture is queued via overshell
{set $voxhwcustomtexture FALSE}
{set $gemcustomtexture FALSE}
{set $smashercustomtexture FALSE}
{set $voxarrowcustomtexture FALSE}
{set $voxnotescustomtexture FALSE}
{set $voxodcustomtexture FALSE}
{set $scorecustomtexture FALSE}
{set $odbarcustomtexture FALSE}
{set $railscustomtexture FALSE}
{set $flamescustomtexture FALSE}
{set $multiringcustomtexture FALSE}
{set $streakcustomtexture FALSE}
{set $spotlightcustomtexture FALSE}

      {$this play_intro}
      {if
         {&&
            {exists gamemode}
            {gamemode get play_track_intro_sfx}}
         {synth play track_beg.cue}}))
{new
   TrackPanel
   coop_track_panel
   (file ../track/trackpanel.milo)
   TRACK_PANEL_HANDLERS}
{new
   TrackPanel
   hth_track_panel
   (file
      {if_else
         {==
            {{game get_participant_config 0}
               get_track_sym}
            vocals}
         ../track/trackpanel_hth_vocals.milo
         ../track/trackpanel_hth.milo})
   TRACK_PANEL_HANDLERS}
{func
   get_track_panel
   {gamemode get track_panel}}
{set
   $playback_file
   ""}
{set
   $fonixout_file
   ""}