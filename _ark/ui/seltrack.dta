{func
   hth_set_track_types
   {gamecfg
      foreach_player_config
      $pcfg
      {if
         {$pcfg is_local_player}
         {if_else
            {'||'
               {!
                  {gamemode get allow_bass}}
               {!=
                  {$pcfg get_controller_type}
                  kControllerGuitar}}
            {$pcfg
               set_track_type
               {$pcfg get_controller_sym}}
            {$pcfg set_track_type kTrackNone}}}}}
{func
   hth_goto_tracksel_screen
   {hth_set_track_types}
   {session
      send_to_all
      (hth_set_track_types)
      kNetReliable}
   {ui
      goto_screen
      {if_else
         {&&
            {gamemode get allow_bass}
            {gamecfg has_participating_guitar_controller}
            {gamemode get separate_parts}}
         qp_hth_seltrack_screen
         {gamemode get ready_screen}}}}
{new
   UIPanel
   qp_hth_seltrack_panel
   (file
      "qp_hth_seltrack.milo")
   LIMIT_TO_LEADER_SESSION
   (focus guitar.btn)
   (enter
      {if
         {==
            {{game
                  get_player_config
                  {game get leader_num}}
               get_track_type}
            kTrackNone}
         {$this set_focus guitar.btn}}
      {foreach
         $part
         (guitar bass)
         {do
            ($button
               {sprint
                  $part
                  ".btn"})
            {if_else
               {song_mgr
                  song_part_rank
                  {game get_song}
                  $part}
               {do
                  {$this enable $button}
                  {$button set_showing TRUE}}
               {do
                  {$this disable $button}
                  {$button set_showing FALSE}}}}})
   (SELECT_MSG
      {do
         ($track
            {basename
               {$component name}})
         {game
            foreach_player_config
            $pcfg
            {if
               {$pcfg is_participating}
               {if_else
                  {$pcfg is_local_player}
                  {$pcfg set_track_type $track}
                  {do
                     ($player_num
                        {$pcfg get player_num})
                     {session
                        send_to_player
                        $player_num
                        {'`'
                           ({game
                                 get_player_config
                                 {',' $player_num}}
                              set_track_type
                              {',' $track})}
                        kNetReliable}}}}}}
      {ui
         goto_screen
         {gamemode get ready_screen}})}
{new
   UIScreen
   qp_hth_seltrack_screen
   (panels meta postsong_sfx_panel movie_panel qp_hth_seltrack_panel helpbar)
   (focus qp_hth_seltrack_panel)
   (helpbar
      {if_else
         {is_leader_local}
         (helpbar_back helpbar_select)
         (helpbar_leave_session)})
   HELPBAR_WAITING_FOR_LEADER
   LIMIT_TO_LEADER_SESSION
   (back qp_selsong_screen)}