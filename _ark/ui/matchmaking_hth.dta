{new
   CharLoadingPanel
   matchmaking_hth_panel
   (file matchmaking_hth.milo)
   (show_waiting
      {spinner.filt animate}
      {waiting.grp set_showing TRUE})
   (hide_waiting
      {waiting.grp set_showing FALSE})
   (unload
      {charcreator_panel free_all})}
{new
   MultiFocusScreen
   matchmaking_hth_screen
   (panels meta practice_space_panel matchmaking_hth_panel helpbar fx)
   (back
      {gamemode get main_mode_screen})
   (helpbar
      ())
   (player_panels
      (panel matchmaking_hth_panel)
      (slots none none)
      (type
         (player_num
            {gamecfg
               get_player_num_from_slot_num
               [slot_num]})
         (slot_num 0)
         (slot none)
         (option '')
         (current_option
            {cond
               ({session is_busy}
                  waiting)
               ({&&
                     {!
                        {$this is_participating}}
                     {&&
                        {!=
                           [slot]
                           none}
                        {!
                           {gamecfg
                              is_instrument_connected
                              [slot]
                              kGameControllerNotParticipating}}}}
                  no_instrument)
               ({!
                     {$this is_participating}}
                  join)
               ({&&
                     {gamemode get ranked}
                     {==
                        {{game
                              get_player_config
                              [player_num]}
                           get_track_type}
                        kTrackNone}}
                  choose_part)
               ({!
                     {{game
                           get_player_config
                           [player_num]}
                        has_char}}
                  {if_else
                     [choose_gender]
                     choose_gender
                     choose_character})
               {do
                  ($leader_num
                     {gamecfg get leader_num})
                  {if_else
                     {== $leader_num -1}
                     ready_no_leader
                     {if_else
                        {==
                           $leader_num
                           [player_num]}
                        ready_leader
                        ready_not_leader}}}})
         (char_provider '')
         (choose_gender FALSE)
         (enter
            {if
               {$this is_participating}
               {$this
                  set
                  slot
                  {{gamecfg
                        get_player_config
                        [player_num]}
                     get_controller_sym}}}
            {$this update_char_provider}
            {set
               [choose_gender]
               FALSE})
         MATCHMAKING_LOAD_CHAR_METHODS
         (verify_controller_types
            {if
               {&&
                  {!
                     {session is_busy}}
                  {$this is_participating}
                  {gamecfg
                     is_player_local
                     [player_num]}}
               {do
                  ($pcfg
                     {game
                        get_player_config
                        [player_num]})
                  ($old_instrument
                     {$pcfg get_controller_type})
                  ($new_instrument
                     {game
                        get_controller_type_from_controller
                        [player_num]})
                  {if
                     {!= $old_instrument $new_instrument}
                     {$this remove_player}}}})
         (update
            {do
               ($participating
                  {$this is_participating})
               ($leader
                  {&&
                     $participating
                     {$this is_leader}})
               ($remote
                  {&&
                     $participating
                     {!
                        {gamecfg
                           is_player_local
                           [player_num]}}})
               ($has_char
                  {&&
                     $participating
                     {{gamecfg
                           get_player_config
                           [player_num]}
                        has_char}})
               ($has_online
                  {&&
                     $participating
                     {'||'
                        $remote
                        {platform_mgr
                           has_online_privilege
                           {joypad_get_players_padnum
                              [player_num]}}}})
               ($session_busy
                  {session is_busy})
               ($part_sel
                  {&&
                     {gamemode get ranked}
                     $participating
                     {==
                        {{gamecfg
                              get_player_config
                              [player_num]}
                           get_track_type}
                        kTrackNone}})
               {unless
                  {band_ui_sink is_forced_transition_active}
                  MATCHMAKING_UPDATE_COMMON}})
         (is_ready
            {'||'
               {!
                  {$this is_participating}}
               {{game
                     get_player_config
                     [player_num]}
                  has_char}})
         (allow_button_msg
            ($player_num)
            {if_else
               {&&
                  {gamemode get local_network}
                  {==
                     [slot_num]
                     kGameHthSlot0}
                  {==
                     [slot]
                     none}
                  {==
                     [player_num]
                     -1}
                  {==
                     {{{ui current_screen}
                           get_panel_from_slot_num
                           kGameHthSlot1}
                        player_num}
                     -1}}
               {gamecfg
                  is_controller_type_with_lowest_pad_num
                  $player_num
                  {gamecfg get_controller_type_from_controller $player_num}}
               {'||'
                  {==
                     [slot]
                     none}
                  {==
                     [slot]
                     {game get_instrument_from_controller $player_num}}}})
         (remove_player
            {do
               ($player_num
                  [player_num])
               {session_mgr remove_local_player $player_num}
               {if
                  {<=
                     {session num_players}
                     0}
                  {foreach
                     $slot_num
                     (kGameHthSlot0 kGameHthSlot1)
                     {do
                        ($panel
                           {{gamemode get matchmaking_screen}
                              get_panel_from_slot_num
                              $slot_num})
                        {$panel set slot none}}}}
               {gamecfg set_player_slot_num $player_num -1}}
            {{gamemode get matchmaking_screen}
               export_all
               update})
         (send_focus_msg TRUE)
         (FOCUS_MSG
            {if
               [send_focus_msg]
               {band_ui_sink
                  send_net_focus
                  [player_num]
                  $new_focus
                  name}})
         (net_focus
            ($player_num $new_focus_name)
            {set
               [send_focus_msg]
               FALSE}
            {$this
               set_focus
               {$this find $new_focus_name}}
            {set
               [send_focus_msg]
               TRUE})
         (get_char
            {{game
                  get_player_config
                  [player_num]}
               get_char})
         (is_participating
            {&&
               {!=
                  [player_num]
                  -1}
               {game
                  is_player_participating
                  [player_num]}})
         (is_leader
            {&&
               {$this is_participating}
               {==
                  {gamecfg get leader_num}
                  [player_num]}})
         (update_char_provider
            {if
               {!=
                  [player_num]
                  -1}
               {if
                  {&&
                     {$this is_participating}
                     {gamecfg
                        is_player_local
                        [player_num]}}
                  {set
                     [char_provider]
                     {get_char_provider
                        [player_num]}}
                  {[char_provider]
                     save_relative_pos
                     {char.lst selected_pos}}
                  {[char_provider]
                     set_instrument_filter
                     {game
                        get_instrument_from_controller
                        [player_num]}}
                  {char.lst
                     set_provider
                     [char_provider]}
                  {char.lst
                     set_selected
                     {[char_provider]
                        get_saved_pos}}
                  {unless
                     {{gamecfg
                           get_player_config
                           [player_num]}
                        get_char}
                     {$this load_char_from_list}}}})
         (new_local_player
            ($player_num)
            {gamecfg
               set_player_slot_num
               $player_num
               [slot_num]}
            {if
               {==
                  $player_num
                  [player_num]}
               {session_mgr remove_sink $this new_local_player}
               {if
                  {gamemode get ranked}
                  {do
                     ($pcfg
                        {gamecfg get_player_config $player_num})
                     {$pcfg
                        set_track_type
                        {switch
                           {$pcfg get_controller_type}
                           (kControllerDrum kTrackDrum)
                           (kControllerVocals kTrackVocals)
                           kTrackNone}}}}
               {$this update_char_provider}
               {if_else
                  {gamemode get auto_choose_char}
                  {do
                     ($pcfg
                        {game get_player_config $player_num})
                     ($char
                        {available_prefab
                           $player_num
                           {$pcfg get_controller_sym}})
                     {$pcfg set_char $char}
                     {$this load_char $char}}
                  {$this load_char_from_list}}
               {{gamemode get matchmaking_screen}
                  export_all
                  update}}))
      (options
         (waiting
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  ((kPad_Tri kPad_X)
                     {synth play button_error})}
               TRUE))
         (no_instrument
            (BUTTON_DOWN_MSG TRUE))
         (join
            (BUTTON_DOWN_MSG
               {if_else
                  {'||'
                     {session_mgr is_finding}
                     {!=
                        {session mode}
                        kNetLocal}}
                  {do
                     {switch
                        $button
                        ((kPad_Tri kPad_X)
                           {synth play button_error})}
                     TRUE}
                  {switch
                     $button
                     (kPad_Tri
                        {band_ui_sink set invite_accepted FALSE}
                        {synth play button_back}
                        {ui
                           goto_screen
                           {{gamemode get matchmaking_screen}
                              get
                              back}})
                     (kPad_X
                        {cond
                           ({gamecfg
                                 is_missing_mic
                                 $player_num
                                 {==
                                    {gamemode get max_local_players}
                                    2}}
                              {vocalist_must_have_mic_screen set message hth_vocalist_needs_mic}
                              {ui push_screen vocalist_must_have_mic_screen})
                           ({game can_local_player_join $player_num}
                              {synth play button_select}
                              {foreach
                                 $slot_num
                                 (kGameHthSlot0 kGameHthSlot1)
                                 {do
                                    ($panel
                                       {{gamemode get matchmaking_screen}
                                          get_panel_from_slot_num
                                          $slot_num})
                                    {$panel
                                       set
                                       slot
                                       {gamecfg get_instrument_from_controller $player_num}}}}
                              {session_mgr add_sink $this new_local_player}
                              {session_mgr
                                 add_local_player
                                 $player_num
                                 {gamecfg get_controller_type_from_controller $player_num}}
                              {{gamemode get matchmaking_screen}
                                 export_all
                                 update})
                           ({&&
                                 {'||'
                                    {==
                                       [slot]
                                       none}
                                    {==
                                       [slot]
                                       {gamecfg get_instrument_from_controller $player_num}}}
                                 {<
                                    {session num_players}
                                    {gamemode get max_local_players}}}
                              {cond
                                 ({&&
                                       {gamemode get online_play_required}
                                       {'||'
                                          {!
                                             {platform_mgr is_player_signed_in $player_num}}
                                          {!
                                             {platform_mgr player_has_online_privilege $player_num}}}}
                                    {mm_signin_net_hth_screen set player_num $player_num}
                                    {ui push_screen mm_signin_net_hth_screen})
                                 ({&&
                                       {gamemode get online_play_required}
                                       {platform_mgr is_player_signed_in $player_num}
                                       {platform_mgr is_player_a_guest $player_num}}
                                    {mm_signin_net_guest_hth_screen set player_num $player_num}
                                    {ui push_screen mm_signin_net_guest_hth_screen})
                                 ({&&
                                       {!
                                          {gamemode get online_play_required}}
                                       {platform_mgr is_player_signed_in $player_num}
                                       {platform_mgr is_player_a_guest $player_num}}
                                    {mm_signin_guest_hth_screen set player_num $player_num}
                                    {ui push_screen mm_signin_guest_hth_screen})
                                 (TRUE
                                    {synth play button_error})})
                           (TRUE
                              {synth play button_error})})}}))
         (choose_part
            (init
               {$this set_focus part_bass.btn}
               {$this set_focus part_guitar.btn})
            (SELECT_START_MSG
               {{gamecfg
                     get_player_config
                     [player_num]}
                  set_track_type
                  {switch
                     $component
                     (part_guitar.btn kTrackGuitar)
                     (part_bass.btn kTrackBass)}}
               {{gamemode get matchmaking_screen}
                  export_all
                  update}
               kDataUnhandled)
            (BUTTON_DOWN_MSG
               {if_else
                  {== $button kPad_Tri}
                  {do
                     {synth play button_back}
                     {$this remove_player}}
                  kDataUnhandled}))
         (choose_character
            (init
               {$this update_char_provider}
               {$this set_focus char.lst})
            (SELECT_START_MSG
               {cond
                  ({[char_provider]
                        is_create_new
                        {$component selected_pos}}
                     {if_else
                        {profile_mgr
                           can_player_create_char
                           [player_num]
                           {{game
                                 get_player_config
                                 [player_num]}
                              get_controller_sym}}
                        {set
                           [choose_gender]
                           TRUE}
                        {ui push_screen mm_hth_char_no_room_screen}})
                  ({[char_provider]
                        is_char
                        {$component selected_pos}}
                     {do
                        ($char
                           {[char_provider]
                              get_char
                              {$component selected_pos}})
                        {{game
                              get_player_config
                              [player_num]}
                           set_char
                           $char}
                        {char_cache
                           request
                           [player_num]
                           $char}})}
               {{gamemode get matchmaking_screen}
                  export_all
                  update}
               kDataUnhandled)
            (SCROLL_MSG
               {$this load_char_from_list})
            (BUTTON_DOWN_MSG
               {if_else
                  {== $button kPad_Tri}
                  {do
                     {synth play button_back}
                     {$this remove_player}}
                  kDataUnhandled}))
         MATCHMAKING_CHOOSE_GENDER
         (ready_no_leader
            (init
               {$this set_focus continue_no_leader.btn})
            (SELECT_START_MSG
               {switch
                  $component
                  (continue_no_leader.btn
                     {if
                        {{gamemode get matchmaking_screen}
                           all_ready}
                        {band_ui_sink
                           sync_screen
                           {gamemode get post_matchmaking_screen}
                           0}
                        {session_mgr
                           send_to_all
                           (game load_all_chars)
                           TRUE}
                        {game load_all_chars}})
                  (choose_char_non_leader.btn
                     {$this release_char})}
               kDataUnhandled)
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  (kPad_Tri
                     {synth play button_back}
                     {$this remove_player})
                  kDataUnhandled}))
         (ready_leader
            (init MM_READY_LEADER_BUTTON_FOCUS)
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  (kPad_Tri
                     {session_mgr cancel_find}
                     {synth play button_back}
                     {$this remove_player})
                  kDataUnhandled})
            (SELECT_START_MSG
               {switch
                  $component
                  (continue.btn
                     {if_else
                        {==
                           {$component get text_token}
                           waiting}
                        {do
                           {synth play button_error}
                           TRUE}
                        {do
                           {if
                              {{gamemode get matchmaking_screen}
                                 all_ready}
                              {band_ui_sink
                                 sync_screen
                                 {gamemode get post_matchmaking_screen}
                                 0}
                              {session_mgr
                                 send_to_all
                                 (game load_all_chars)
                                 TRUE}
                              {game load_all_chars}}
                           kDataUnhandled}})
                  ((search.btn search_continue.btn)
                     #ifndef _SHIP
                     {if
                        {!=
                           {search.btn get text_token}
                           {search_continue.btn get text_token}}
                        {fail
                           "search.btn and search_continue.btn out of sync\n"}}
                     #endif
                     {switch
                        {search.btn get text_token}
                        ((matchmaker_search_hth matchmaker_search_band)
                           {gamecfg set channel 0}
                           {session_mgr find_players})
                        (matchmaker_search_cancel
                           {session_mgr cancel_find})
                        ((matchmaker_invite_join_band matchmaker_invite_join_game)
                           {session_mgr join_invite})}
                     kDataUnhandled)
                  (invite.btn
                     #ifdef HX_XBOX
                     {platform_mgr
                        show_friends
                        [player_num]}
                     #else
                     {band_ui_sink set_net_sync FALSE}
                     {ui push_screen invite_friends_screen}
                     #endif
                     kDataUnhandled)
                  (kick.btn
                     {band_ui_sink set_net_sync FALSE}
                     {ui push_screen kick_player_screen}
                     kDataUnhandled)
                  (choose_char.btn
                     {$this release_char}
                     kDataUnhandled)
                  kDataUnhandled}))
         (ready_not_leader
            (init
               {if
                  {==
                     {session mode}
                     kNetLocal}
                  {$this set_focus choose_char_non_leader.btn}})
            (SELECT_START_MSG
               {switch
                  $component
                  (choose_char_non_leader.btn
                     {$this release_char})}
               kDataUnhandled)
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  (kPad_Tri
                     {unless
                        {gamemode get ranked}
                        {synth play button_back}
                        {$this remove_player}})
                  kDataUnhandled}))))
   (is_ready
      {&&
         {>=
            {session num_players}
            {gamemode get min_players}}
         {<=
            {session num_players}
            {gamemode get max_players}}})
   (BUTTON_DOWN_MSG
      {switch
         $button
         ((kPad_X kPad_Tri)
            {synth play button_error})
         #ifdef HX_XBOX
         (kPad_R1
            {if
               {&&
                  {>
                     {session num_players}
                     0}
                  {gamemode get online_play_required}
                  {!
                     {gamemode get ranked}}
                  {gamecfg is_player_participating $player_num}}
               {band_ui_sink set_net_sync FALSE}
               {ui push_screen more_details_screen}})
         #endif
         TRUE})
   (NEW_REMOTE_PLAYER_MSG
      {if
         {==
            {session num_open_slots}
            0}
         {session_mgr cancel_find}}
      {$this export_all update})
   (accepted_join_request_msg
      {if
         {&&
            {gamemode get ranked}
            {is_leader_local}}
         {ui goto_screen fake_matchmaking_hth_screen}})
   (REMOTE_PLAYER_LEFT_MSG
      {if
         {&&
            {==
               $player_num
               {gamecfg get leader_num}}
            {!
               {session disabled}}}
         {foreach
            $slot_num
            (kGameHthSlot0 kGameHthSlot1)
            {do
               ($panel
                  {{gamemode get matchmaking_screen}
                     get_panel_from_slot_num
                     $slot_num})
               {$panel set slot none}}}
         {tour clear_performer}
         {session clear}
         {session set_public FALSE}
         {$this export_all update}})
   (change_game_msg
      {$this export_all update})
   (signin_change_waiting FALSE)
   (profile_activated_waiting FALSE)
   (signin_changed
      {unless
         {band_ui_sink is_forced_transition_active}
         {if_else
            {==
               {ui current_screen}
               $this}
            {$this process_signin_change}
            {$this set signin_change_waiting TRUE}}})
   (process_signin_change
      {unless
         {band_ui_sink is_forced_transition_active}
         {foreach_int
            $slot_num
            0
            4
            {do
               ($player_num
                  {$this get_player_num_from_slot_num $slot_num})
               {if
                  {&&
                     {!= $player_num -1}
                     {gamecfg is_player_local $player_num}
                     {platform_mgr has_player_signin_changed $player_num}}
                  {{$this get_panel_from_slot_num $slot_num}
                     remove_player}}}}
         {$this process_post_signin_change}})
   (process_post_signin_change
      {unless
         {band_ui_sink is_forced_transition_active}
         {profile_mgr rebuild_profile_map}
         {if_else
            {autoload_allowed}
            {autoload}
            {profile_mgr purge_old_data}}
         {$this export_all update}})
   (profile_activated_msg
      ($pad_num)
      {unless
         {band_ui_sink is_forced_transition_active}
         {if_else
            {==
               {ui current_screen}
               $this}
            {$this process_post_signin_change}
            {$this set profile_activated_waiting TRUE}}})
   (save_load_all_complete_msg
      {profile_mgr rebuild_profile_map}
      {$this export_all update})
   (JOYPAD_CONNECT_MSG
      {if
         {&&
            {!
               {ui in_transition}}
            {==
               {ui current_screen}
               $this}}
         {$this verify_controllers_and_update}})
   (verify_controllers_and_update
      {$this export_all verify_controller_types}
      {$this export_all update})
   (enter
      {{gamemode get matchmaking_screen}
         set_showing
         FALSE}
      {session_mgr add_sink $this}
      {memcardmgr add_sink $this save_load_all_complete_msg}
      {profile_mgr add_sink $this profile_activated_msg}
      {game set joining_allowed TRUE}
      {band_ui_sink set handle_remote_player_left FALSE}
      {matchmaking_hth_panel hide_waiting}
      {practice_space_panel
         select_cam
         "hth_enter"}
      {presence_mgr set_assembling_band}
      {band_ui_sink set_net_sync TRUE}
      {band_ui_sink set_controller_level kControllerLevelNone})
   (on_dismiss_event
      {$this transition_complete '' ''})
   (TRANSITION_COMPLETE_MSG
      {$this export_all verify_controller_types}
      {cond
         ({band_ui_sink has_event})
         ({$this get signin_change_waiting}
            {$this set signin_change_waiting FALSE}
            {$this process_signin_change})
         ({$this get profile_activated_waiting}
            {$this set profile_activated_waiting FALSE}
            {$this process_post_signin_change})
         ({!
               {session is_busy}}
            {if
               {autoload_allowed}
               {autoload}})}
      {$this export_all update})
   (exit
      {$this set signin_change_waiting FALSE}
      {session_mgr remove_sink $this}
      {memcardmgr remove_sink $this save_load_all_complete_msg}
      {profile_mgr remove_sink $this profile_activated_msg}
      {session_mgr cancel_find}
      {session set_invites_allowed FALSE}
      {game set joining_allowed FALSE}
      {band_ui_sink set handle_remote_player_left TRUE}
      {presence_mgr set_prepare_to_rock}
      {synth reset_mics_changed}
      {band_ui_sink set_controller_level kControllerLevelSession})
   (allow_input
      {!
         {session is_busy}})
   (session_busy_msg
      ($is_busy)
      {matchmaking_hth_panel
         {if_else $is_busy show_waiting hide_waiting}}
      {if
         {! $is_busy}
         {$this export_all verify_controller_types}
         {$this export_all update}})
   (wait_for_session
      {$this export_all update})
   (session_ready_complete_msg
      {do
         ($controller_sym none)
         {gamecfg
            foreach_local_player_config
            $pcfg
            {if
               {$pcfg is_participating}
               {set
                  $controller_sym
                  {$pcfg get_controller_sym}}}}
         {foreach
            $slot_num
            (kGameHthSlot0 kGameHthSlot1)
            {do
               ($panel
                  {{gamemode get matchmaking_screen}
                     get_panel_from_slot_num
                     $slot_num})
               {$panel set slot $controller_sym}}}}
      {$this export_all verify_controller_types}
      {$this export_all update})
   (session_disabled
      {$this export_all update})}
{new
   MultiFocusScreen
   fake_matchmaking_hth_screen
   (panels meta practice_space_panel matchmaking_hth_panel helpbar)
   (player_panels
      (panel matchmaking_hth_panel)
      (slots none none)
      (type
         (player_num
            {gamecfg
               get_player_num_from_slot_num
               [slot_num]})
         (slot_num 0)
         (slot none)
         (option '')
         (current_option waiting)
         (update TRUE)
         (is_ready TRUE)
         (allow_button_msg
            ($player_num)
            FALSE))
      (options
         (waiting
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  ((kPad_Tri kPad_X)
                     {synth play button_error})}
               TRUE))))
   (is_ready TRUE)
   (TRANSITION_COMPLETE_MSG
      {script_task
         kTaskUISeconds
         (delay 1.5)
         (script
            {if
               {&&
                  {==
                     {ui current_screen}
                     fake_matchmaking_hth_screen}
                  {!
                     {ui in_transition}}}
               {ui
                  goto_screen
                  {gamemode get post_matchmaking_screen}}})})}
{new
   UIScreen
   mm_hth_char_no_room_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
      {dialog_panel
         set_ok
         {sprintf
            {localize_token charcreator_no_more_chars_fmt}
            {profile_mgr get_max_chars_per_inst}}}
      {platform_mgr add_sink $this signin_changed})
   (exit
      {platform_mgr remove_sink $this signin_changed})
   (SELECT_MSG
      {ui pop_screen})
   (signin_changed
      {ui pop_screen})}
{new
   UIScreen
   mm_signin_net_guest_hth_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS
   (enter
      {dialog_panel
         set_custom
         {localize_token mm_need_a_profile_hth_net_guest_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_cancel}
         opt1.btn}
      MATCHMAKING_POPUP_ENTER)
   (SELECT_MSG
      {switch
         $component
         (opt1.btn
            {if_else
               {gamemode get online_play_required}
               {platform_mgr signin 1 1}
               {platform_mgr signin 4 0}})
         (opt2.btn
            {ui pop_screen})})}
{new
   UIScreen
   mm_signin_guest_hth_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS
   (enter
      {dialog_panel
         set_custom
         {localize_token mm_need_a_profile_hth_guest_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_cancel}
         opt1.btn}
      MATCHMAKING_POPUP_ENTER)
   (SELECT_MSG
      {switch
         $component
         (opt1.btn
            {if_else
               {gamemode get online_play_required}
               {platform_mgr signin 1 1}
               {platform_mgr signin 4 0}})
         (opt2.btn
            {ui pop_screen})})}
{new
   UIScreen
   mm_signin_net_hth_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS
   (enter
      {dialog_panel
         set_custom
         {localize mm_need_a_profile_net_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_cancel}
         opt1.btn}
      MATCHMAKING_POPUP_ENTER)
   (SELECT_MSG
      {switch
         $component
         (opt1.btn
            {if_else
               {gamemode get online_play_required}
               {platform_mgr signin 1 1}
               {platform_mgr signin 4 0}})
         (opt2.btn
            {ui pop_screen})})}