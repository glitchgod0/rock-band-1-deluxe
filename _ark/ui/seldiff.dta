#define SELDIFF_PANEL_HANDLERS
((unload
      {session set_all_local_ready_status FALSE}))
{new
   UIPanel
   seldiff_panel
   (file
      "seldiff.milo")
   SELDIFF_PANEL_HANDLERS
   LIMIT_TO_SESSION
   (enter
      {do
         ($perf
            {tour performer})
         {song.lbl
            set_localized
            {if_else
               $perf
               {tour event_display_name}
               {song_mgr
                  song_name
                  {game get_song}}}}
         {by_line.lbl
            set_localized
            {if_else
               $perf
               {tour event_description}
               {song_mgr
                  by_line
                  {game get_song}}}}})}
{new
   UIPanel
   seldiff_solo_panel
   (file
      "seldiff_solo.milo")
   SELDIFF_PANEL_HANDLERS
   LIMIT_TO_SESSION
   (enter
      {do
         ($perf
            {tour performer})
         {song.lbl
            set_localized
            {if_else
               $perf
               {tour event_display_name}
               {song_mgr
                  song_name
                  {game get_song}}}}
         {by_line.lbl
            set_localized
            {if_else
               $perf
               {tour event_description}
               {song_mgr
                  by_line
                  {game get_song}}}}})}
#define SELDIFF_SCREEN_PANELS
((slots COOP_SLOTS_ORDER)
   (type
      (player_num
         {gamecfg
            get_player_num_from_slot_num
            [slot_num]})
      (slot_num 0)
      (slot none)
      (option '')
      (current_option
         {cond
            ({!
                  {$this is_active}}
               inactive)
            ({&&
                  {$this is_guitar_slot}
                  {!
                     {$this is_track_set}}}
               part_select)
            ({&&
                  {$this is_guitar_slot}
                  {!
                     {$this is_other_track_set}}}
               part_select_wait)
            ({!
                  {{$this player_config}
                     is_ready}}
               diff_select)
            diff_selected})
      (enter
         {if
            {$this is_active}
            {do
               ($pcfg
                  {$this player_config})
               {if
                  {&&
                     {$pcfg is_local_player}
                     {$pcfg get_char}}
                  {switch
                     {{$pcfg get_char}
                        get_instrument}
                     (drum
                        {$pcfg set_track_type kTrackDrum})
                     (vocals
                        {$pcfg set_track_type kTrackVocals})
                     {$pcfg set_track_type kTrackNone}}}}})
      (update
         {$this
            set_showing
            {$this is_active}}
         {if
            {$this showing}
            {do
               ($pcfg
                  {$this player_config})
               ($char
                  {$pcfg get_char})
               ($ready
                  {$pcfg is_ready})
               ($diff
                  {$pcfg get_difficulty_sym})
               ($min_diff
                  {if_else
                     {tour performer}
                     {{tour event}
                        get
                        min_difficulty}
                     kDifficultyEasy})
               {instrument.lbl
                  set_localized
                  {if_else
                     {==
                        {$pcfg get_track_type}
                        kTrackNone}
                     {$char instrument_icon}
                     {$char
                        track_icon
                        {$pcfg get_track_sym}}}}
               {if
                  {==
                     {$char get_instrument}
                     guitar}
                  {guitar.lbl
                     set_localized
                     {$char track_icon guitar}}
                  {bass.lbl
                     set_localized
                     {$char track_icon bass}}}
               {unless
                  {gamemode is_solo}
                  {{seldiff_panel
                        find
                        {sprintf
                           "remote%i.mnm"
                           [slot_num]}}
                     set_frame
                     {!
                        {gamecfg
                           is_player_local
                           [player_num]}}}}
               {player.lbl
                  set_localized
                  {$pcfg intro_name}}
               {if_else
                  {&&
                     {$this is_guitar_slot}
                     {'||'
                        {!
                           {$this is_track_set}}
                        {!
                           {$this is_other_track_set}}}}
                  {do
                     {seldiff.grp set_showing FALSE}
                     {selpart.grp set_showing TRUE}}
                  {do
                     {seldiff.grp set_showing TRUE}
                     {selpart.grp set_showing FALSE}}}
               {if
                  {seldiff.grp showing}
                  {$this
                     iterate
                     BandButton
                     $b
                     {if_else
                        {==
                           {$b get text_token}
                           $diff}
                        {do
                           {$this set_focus $b}
                           {$b set_showing TRUE}}
                        {$b
                           set_showing
                           {! $ready}}}}
                  {ready.lbl set_showing $ready}}
               {do
                  ($diff 0)
                  {foreach
                     $diff_sym
                     (DIFF_SYMBOLS)
                     {if
                        {< $diff $min_diff}
                        {$this
                           disable
                           {sprint
                              $diff_sym
                              ".btn"}}}
                     {'++' $diff}}}
               {if
                  {selpart.grp showing}
                  {if_else
                     {$this is_track_set}
                     {do
                        ($track
                           {$pcfg get_track_type})
                        {guitar.grp
                           set_showing
                           {== $track kTrackGuitar}}
                        {bass.grp
                           set_showing
                           {== $track kTrackBass}}
                        {if_else
                           {!
                              {$this is_other_track_set}}
                           {waiting_part.lbl set_showing TRUE}
                           {waiting_part.lbl set_showing FALSE}}}
                     {do
                        {guitar.grp set_showing TRUE}
                        {bass.grp set_showing TRUE}
                        {waiting_part.lbl set_showing FALSE}
                        {if
                           {&&
                              {!=
                                 {$this focus_name}
                                 guitar.btn}
                              {!=
                                 {$this focus_name}
                                 bass.btn}}
                           {$this set_focus guitar.btn}}
                        {foreach
                           $part
                           (guitar bass)
                           {do
                              ($button
                                 {sprint
                                    $part
                                    ".btn"})
                              ($label
                                 {sprint
                                    $part
                                    ".lbl"})
                              ($enable
                                 {if_else
                                    {tour performer}
                                    {do
                                       ($required_part
                                          {{tour performer}
                                             required_set_part})
                                       {'||'
                                          {== $required_part ''}
                                          {== $required_part $part}}}
                                    {song_mgr
                                       song_part_rank
                                       {game get_song}
                                       $part}})
                              {if_else
                                 $enable
                                 {do
                                    {$this enable $button}
                                    {$this enable $label}}
                                 {do
                                    {$this disable $button}
                                    {$this disable $label}}}}}}}}}})
      (is_ready
         {'||'
            {!
               {game
                  is_player_participating
                  [player_num]}}
            {{$this player_config}
               is_ready}})
      (is_active
         {&&
            {!=
               [player_num]
               -1}
            {gamecfg
               is_player_participating
               [player_num]}})
      (is_guitar_slot
         {==
            [slot]
            guitar})
      (is_track_set
         {!=
            {{$this player_config}
               get_track_type}
            kTrackNone})
      (player_config
         {gamecfg
            get_player_config
            [player_num]})
      (is_other_track_set
         {do
            ($ret TRUE)
            {gamecfg
               foreach_player_config
               $pcfg
               {if
                  {&&
                     {$pcfg is_participating}
                     {!=
                        {$pcfg get player_num}
                        [player_num]}
                     {==
                        {{$pcfg get_char}
                           get_instrument}
                        guitar}
                     {==
                        {$pcfg get_track_type}
                        kTrackNone}}
                  {set $ret FALSE}}}
            $ret})
      (send_focus_msg TRUE))
   (options
      (inactive
         (BUTTON_DOWN_MSG TRUE))
      (part_select
         (FOCUS_MSG
            {if
               [send_focus_msg]
               {band_ui_sink
                  send_net_focus
                  [player_num]
                  $new_focus}})
         (net_focus
            ($player_num $new_focus_name)
            {set
               [send_focus_msg]
               FALSE}
            {$this
               set_focus
               {$this find $new_focus_name}}
            {set
               [send_focus_msg]
               TRUE})
         (SELECT_MSG
            {switch
               $component
               (guitar.btn
                  {{$this player_config}
                     set_track_type
                     kTrackGuitar})
               (bass.btn
                  {{$this player_config}
                     set_track_type
                     kTrackBass})}
            {{ui current_screen}
               verify_player_change
               [player_num]}
            {{ui current_screen}
               export_all
               update}
            kDataUnhandled))
      (part_select_wait
         (BUTTON_DOWN_MSG
            {if_else
               {== $button kPad_Tri}
               kDataUnhandled
               {if
                  {== $button kPad_X}
                  {synth play button_error}}}))
      (diff_select
         (FOCUS_MSG
            {if
               {gamecfg
                  is_player_local
                  [player_num]}
               {{$this player_config}
                  set_difficulty
                  {switch
                     {$new_focus name}
                     (easy.btn easy)
                     (medium.btn medium)
                     (hard.btn hard)
                     (expert.btn expert)
                     none}}}
            kDataUnhandled)
         (SELECT_MSG
            {if_else
               {gamemode get is_practice}
               {ui goto_screen practice_preloading_screen}
               {{$this player_config}
                  set_ready
                  TRUE}}
            {{ui current_screen}
               update
               $this}
            kDataUnhandled))
      (diff_selected
         (BUTTON_DOWN_MSG
            {if
               {== $button kPad_Tri}
               {synth play button_back}
               {{$this player_config}
                  set_ready
                  FALSE}
               {{ui current_screen}
                  update
                  $this}}
            TRUE))))
#define SELDIFF_SCREEN_HANDLERS
((verify_player_change
      ($player_num)
      {do
         ($g0_pcfg 0)
         ($g1_pcfg 0)
         {gamecfg
            foreach_player_config
            $pcfg
            {if
               {&&
                  {$pcfg is_participating}
                  {$pcfg get_char}
                  {==
                     {{$pcfg get_char}
                        get_instrument}
                     guitar}}
               {if_else
                  $g0_pcfg
                  {set $g1_pcfg $pcfg}
                  {set $g0_pcfg $pcfg}}}}
         {if
            {&&
               $g0_pcfg
               $g1_pcfg
               {'||'
                  {==
                     {$g0_pcfg get player_num}
                     $player_num}
                  {==
                     {$g1_pcfg get player_num}
                     $player_num}}
               {!=
                  {$g0_pcfg get_track_type}
                  kTrackNone}
               {!=
                  {$g1_pcfg get_track_type}
                  kTrackNone}
               {==
                  {$g0_pcfg get_track_type}
                  {$g1_pcfg get_track_type}}
               {$g0_pcfg is_local_player}}
            {do
               ($g0_track_type kTrackNone)
               ($g1_track_type kTrackNone)
               {if_else
                  {random 0 1}
                  {do
                     {set $g0_track_type kTrackBass}
                     {set $g1_track_type kTrackGuitar}}
                  {do
                     {set $g0_track_type kTrackGuitar}
                     {set $g1_track_type kTrackBass}}}
               {if_else
                  {$g0_pcfg is_local_player}
                  {$g0_pcfg set_track_type $g0_track_type}
                  {session
                     send_to_player
                     {$g0_pcfg get player_num}
                     {'`'
                        (ui
                           reassign_player_track_type_msg
                           {','
                              {$g0_pcfg get player_num}}
                           {',' $g0_track_type})}
                     kNetReliable}}
               {if_else
                  {$g1_pcfg is_local_player}
                  {$g1_pcfg set_track_type $g1_track_type}
                  {session
                     send_to_player
                     {$g1_pcfg get player_num}
                     {'`'
                        (ui
                           reassign_player_track_type_msg
                           {','
                              {$g1_pcfg get player_num}}
                           {',' $g1_track_type})}
                     kNetReliable}}}}})
   (reassign_player_track_type_msg
      ($player_num $track_type)
      {do
         ($pcfg
            {gamecfg get_player_config $player_num})
         {if
            {$pcfg is_local_player}
            {$pcfg set_track_type $track_type}}})
   (REMOTE_PLAYER_CHANGED_MSG
      {$this verify_player_change $player_num}
      {$this export_all update}))
{new
   MultiFocusScreen
   qp_seldiff_screen
   (panels meta postsong_sfx_panel movie_panel seldiff_panel helpbar)
   (helpbar
      (helpbar_back helpbar_select))
   (player_panels
      (panel seldiff_panel)
      SELDIFF_SCREEN_PANELS)
   SELDIFF_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {if_else
         {&&
            {game is_player_participating $player_num}
            {== $button kPad_Tri}}
         {if_else
            {is_leader_local}
            {ui goto_screen qp_selsong_screen FALSE TRUE}
            {band_ui_sink trigger_event remote_exit}}
         kDataUnhandled})
   (start_loading_msg
      {$this export_all update}
      {ui goto_screen loading_screen})}
{new
   MultiFocusScreen
   qp_seldiff_solo_screen
   (panels meta postsong_sfx_panel movie_panel seldiff_solo_panel helpbar fx)
   (helpbar
      (helpbar_back helpbar_select))
   (player_panels
      (panel seldiff_solo_panel)
      SELDIFF_SCREEN_PANELS)
   SELDIFF_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {if_else
         {&&
            {game is_player_participating $player_num}
            {== $button kPad_Tri}}
         {if_else
            {gamemode get is_practice}
            {ui goto_screen practice_selsong_screen FALSE TRUE}
            {ui goto_screen qp_selsong_screen FALSE TRUE}}
         kDataUnhandled})
   (start_loading_msg
      {ui goto_screen loading_screen})
   (enter
      {do
         ($player_num
            {gamecfg get leader_num})
         ($pcfg
            {gamecfg get_player_config $player_num})
         {switch
            {$pcfg get_controller_type}
            (kControllerVocals
               {practice_panel set_in_vocal_mode TRUE})
            (kControllerDrum
               {practice_panel set_in_vocal_mode FALSE})
            (kControllerGuitar
               {practice_panel set_in_vocal_mode FALSE})}}
      kDataUnhandled)
   (exit
      {fx fade_out})}
{new
   MultiFocusScreen
   tour_band_seldiff_screen
   (panels meta postsong_sfx_panel tour_world_bg_panel seldiff_panel helpbar fx)
   (helpbar
      (helpbar_back helpbar_select))
   (player_panels
      (panel seldiff_panel)
      SELDIFF_SCREEN_PANELS)
   SELDIFF_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {if_else
         {&&
            {game is_player_participating $player_num}
            {== $button kPad_Tri}}
         {if_else
            {is_leader_local}
            {ui goto_screen tour_band_event_screen FALSE TRUE}
            {band_ui_sink trigger_event remote_exit}}
         kDataUnhandled})
   (start_loading_msg
      {$this export_all update}
      {ui
         goto_screen
         {if_else
            {{tour performer}
               has_next_moment}
            tour_active_moment_screen
            loading_screen}})}
{new
   UIPanel
   qp_hth_seldiff_panel
   (file
      "qp_hth_seldiff.milo")
   LIMIT_TO_LEADER_SESSION
   (enter
      {{$this find_self song.lbl}
         set_localized
         {song_mgr
            song_name
            {game get_song}}}
      {{$this find_self by_line.lbl}
         set_localized
         {song_mgr
            by_line
            {game get_song}}}
      {player.lbl set_showing FALSE}
      {waiting_part.lbl set_showing FALSE}
      {ready.lbl set_showing FALSE}
      {do
         ($leader
            {gamecfg
               get_player_config
               {game get leader_num}})
         {$this
            set_focus
            {if_else
               {==
                  {$leader get_track_type}
                  kTrackNone}
               guitar.btn
               {sprint
                  {$leader get_difficulty_sym}
                  ".btn"}}}}
      {session add_sink $this}
      {$this update})
   (exit
      {session remove_sink $this})
   (REMOTE_PLAYER_CHANGED_MSG
      {$this update})
   (update
      {do
         ($leader
            {gamecfg
               get_player_config
               {game get leader_num}})
         ($has_part
            {!=
               {$leader get_track_type}
               kTrackNone})
         {selpart.grp
            set_showing
            {! $has_part}}
         {seldiff.grp set_showing $has_part}
         {if
            $has_part
            {instrument.lbl
               set_localized
               {cnv_instrumenttoicon
                  {$leader get_track_sym}}}}}
      {foreach
         $part
         (guitar bass)
         {do
            ($button
               {sprint
                  $part
                  ".btn"})
            ($label
               {sprint
                  $part
                  ".lbl"})
            {if_else
               {song_mgr
                  song_part_rank
                  {game get_song}
                  $part}
               {do
                  {$this enable $button}
                  {$this enable $label}}
               {do
                  {$this disable $button}
                  {$this disable $label}}}}})
   (BUTTON_DOWN_MSG
      {do
         ($leader
            {gamecfg
               get_player_config
               {game get leader_num}})
         {if_else
            {&&
               {== $button kPad_Tri}
               {!=
                  {$leader get_track_type}
                  kTrackNone}
               {gamemode get allow_bass}
               {==
                  {{$leader get_char}
                     get_instrument}
                  guitar}}
            {do
               {session
                  send_to_all
                  (synth play button_back)
                  kNetReliable}
               {synth play button_back}
               {$this
                  set_focus
                  {sprint
                     {$leader get_track_sym}
                     ".btn"}}
               {$this update_track none}
               {$this update}}
            kDataUnhandled}})
   (update_track
      ($track)
      {game
         foreach_player_config
         $pcfg
         {if
            {$pcfg is_participating}
            {if_else
               {$pcfg is_local_player}
               {$pcfg set_track_type $track}
               {do
                  ($player_num
                     {$pcfg get player_num})
                  {session
                     send_to_player
                     $player_num
                     {'`'
                        ({game
                              get_player_config
                              {',' $player_num}}
                           set_track_type
                           {',' $track})}
                     kNetReliable}}}}})
   (SELECT_START_MSG
      {do
         ($leader
            {gamecfg
               get_player_config
               {game get leader_num}})
         {if_else
            {==
               {$leader get_track_type}
               kTrackNone}
            {do
               ($track
                  {basename
                     {$component name}})
               {$this
                  set_focus
                  {sprint
                     {$leader get_difficulty_sym}
                     ".btn"}}
               {$this update_track $track}
               {$this update}}
            {do
               ($diff
                  {basename
                     {$component name}})
               {game
                  foreach_player_config
                  $pcfg
                  {if
                     {$pcfg is_participating}
                     {if_else
                        {$pcfg is_local_player}
                        {$pcfg set_difficulty $diff}
                        {do
                           ($player_num
                              {$pcfg get player_num})
                           {session
                              send_to_player
                              $player_num
                              {'`'
                                 ({game
                                       get_player_config
                                       {',' $player_num}}
                                    set_difficulty
                                    {',' $diff})}
                              kNetReliable}}}}}
               {ui goto_screen loading_screen}}}}
      kDataUnhandled)}
{new
   UIScreen
   qp_hth_seldiff_screen
   (panels meta postsong_sfx_panel movie_panel qp_hth_seldiff_panel helpbar)
   (focus qp_hth_seldiff_panel)
   (helpbar
      {if_else
         {is_leader_local}
         (helpbar_back helpbar_choosediff)
         (helpbar_back)})
   HELPBAR_WAITING_FOR_LEADER
   (back qp_selsong_screen)}
{new
   UIPanel
   hth_split_seldiff_panel
   (file
      "seldiff_hth.milo")
   (enter
      {song.lbl
         set_localized
         {song_mgr
            song_name
            {game get_song}}}
      {by_line.lbl
         set_localized
         {song_mgr
            by_line
            {game get_song}}})
   (unload
      {session set_all_local_ready_status FALSE})}
{new
   MultiFocusScreen
   hth_split_seldiff_screen
   (panels meta postsong_sfx_panel movie_panel hth_split_seldiff_panel helpbar)
   (helpbar
      (helpbar_back helpbar_select))
   (back
      {if_else
         {gamecfg has_participating_guitar_controller}
         qp_hth_seltrack_screen
         qp_selsong_screen})
   (player_panels
      (panel hth_split_seldiff_panel)
      (slots none none)
      (type
         (player_num
            {gamecfg
               get_player_num_from_slot_num
               [slot_num]})
         (slot_num 0)
         (slot none)
         (option '')
         (current_option
            {cond
               ({!
                     {$this is_active}}
                  inactive)
               ({{$this player_config}
                     is_ready}
                  selected)
               select})
         (update
            {$this
               set_showing
               {$this is_active}}
            {if
               {$this showing}
               {do
                  ($pcfg
                     {$this player_config})
                  ($char
                     {$pcfg get_char})
                  {instrument.lbl
                     set_localized
                     {if_else
                        {==
                           {$pcfg get_track_type}
                           kTrackNone}
                        {$char instrument_icon}
                        {$char
                           track_icon
                           {$pcfg get_track_sym}}}}
                  {if
                     {==
                        {$char get_instrument}
                        guitar}
                     {guitar.lbl
                        set_localized
                        {$char track_icon guitar}}
                     {bass.lbl
                        set_localized
                        {$char track_icon bass}}}
                  {{hth_split_seldiff_panel
                        find
                        {sprintf
                           "remote%i.mnm"
                           [slot_num]}}
                     set_frame
                     {!
                        {gamecfg
                           is_player_local
                           [player_num]}}}
                  {player.lbl
                     set_localized
                     {$pcfg intro_name}}
                  {do
                     ($ready
                        {$pcfg is_ready})
                     ($diff
                        {$pcfg get_difficulty_sym})
                     {$this
                        iterate
                        BandButton
                        $b
                        {if_else
                           {==
                              {$b name}
                              {sprintf
                                 "%s.btn"
                                 $diff}}
                           {do
                              {$this set_focus $b}
                              {$b set_showing TRUE}}
                           {$b
                              set_showing
                              {! $ready}}}}
                     {ready.lbl set_showing $ready}}}})
         (is_ready
            {'||'
               {!
                  {game
                     is_player_participating
                     [player_num]}}
               {{$this player_config}
                  is_ready}})
         (is_active
            {&&
               {!=
                  [player_num]
                  -1}
               {gamecfg
                  is_player_participating
                  [player_num]}
               {!=
                  {{$this player_config}
                     get_track_type}
                  kTrackNone}})
         (player_config
            {gamecfg
               get_player_config
               [player_num]}))
      (options
         (select
            (BUTTON_DOWN_MSG
               {if_else
                  {&&
                     {== $button kPad_Tri}
                     {!
                        {is_leader_local}}}
                  {if
                     {gamecfg is_player_participating $player_num}
                     {band_ui_sink trigger_event remote_exit}}
                  kDataUnhandled})
            (FOCUS_MSG
               {if
                  {gamecfg
                     is_player_local
                     [player_num]}
                  {{$this player_config}
                     set_difficulty
                     {switch
                        {$new_focus name}
                        (easy.btn easy)
                        (medium.btn medium)
                        (hard.btn hard)
                        (expert.btn expert)
                        none}}}
               kDataUnhandled)
            (SELECT_START_MSG
               {{$this player_config}
                  set_ready
                  TRUE}
               {{ui current_screen}
                  update
                  $this}
               kDataUnhandled))
         (selected
            (BUTTON_DOWN_MSG
               {if
                  {== $button kPad_Tri}
                  {{game
                        get_player_config
                        [player_num]}
                     set_ready
                     FALSE}
                  {{ui current_screen}
                     update
                     $this}}
               TRUE))
         (inactive
            (BUTTON_DOWN_MSG TRUE))))
   (start_loading_msg
      {$this export_all update}
      {ui goto_screen loading_screen})}
{new
   UIPanel
   qp_hth_ranked_preload_panel
   (player_num
      {local_to_leader_player_num})
   (enter
      {session add_sink $this}
      {if
         {==
            [player_num]
            -1}
         {do
            ($random_song
               {song_provider get_random_song})
            ($random_venue
               {random_elem
                  {gamemode get venues}})
            {while
               {== $random_venue blank_01}
               {set
                  $random_venue
                  {random_elem
                     {gamemode get venues}}}}
            {gamecfg set_song $random_song}
            {gamecfg set_venue $random_venue}}}
      {game
         foreach_player_config
         $pcfg
         {if
            {&&
               {$pcfg is_participating}
               {$pcfg is_local_player}}
            {$pcfg
               set_difficulty
               {main_hth_seldiff_panel get difficulty}}
            {$pcfg set_ready TRUE}}})
   (exit
      {session remove_sink $this})
   (start_loading_msg
      {if
         {==
            {session num_players}
            2}
         {ui goto_screen loading_screen}})}
{new
   UIScreen
   qp_hth_ranked_preload_screen
   (panels meta movie_panel qp_hth_ranked_preload_panel)
   (focus qp_hth_ranked_preload_panel)}