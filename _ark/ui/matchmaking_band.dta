#define BAND_MATCHMAKING_INIT_BWT
({tour_band_hub_panel set reset TRUE}
   {if
      {&&
         {tour performer}
         {==
            {{tour performer}
               hometown}
            ''}}
      {{tour performer}
         set_hometown
         {{band_leader_char}
            hometown}}})
{new
   CharLoadingPanel
   matchmaking_band_panel
   (file matchmaking_band.milo)
   (show_waiting
      {spinner.filt animate}
      {waiting.grp set_showing TRUE})
   (hide_waiting
      {waiting.grp set_showing FALSE})
   (slot_to_grp
      ($slot_num)
      {sprintf
         "slot%d_char_hint.grp"
         $slot_num})
   (slot_to_lbl
      ($slot_num)
      {sprintf
         "slot%d_char_hint.lbl"
         $slot_num})
   (slot_to_leader_array
      ($slot_num)
      {do
         ($a
            {array 2})
         {set_elem
            $a
            0
            {sprintf
               "slot%d_char_hint_leader_frame.mesh"
               $slot_num}}
         {set_elem
            $a
            1
            {sprintf
               "slot%d_char_hint_leader.lbl"
               $slot_num}}
         $a})
   (slot_to_trg
      ($slot_num)
      {sprintf
         "slot0%d.trg"
         $slot_num})
   (show_char_hint
      ($slot_num $name $is_leader)
      {{$this slot_to_lbl $slot_num}
         set_localized
         $name}
      {foreach
         $entry
         {$this slot_to_leader_array $slot_num}
         {$entry set_showing $is_leader}}
      {if
         {!
            {{$this slot_to_grp $slot_num}
               showing}}
         {{$this slot_to_grp $slot_num}
            set_showing
            TRUE}
         {{$this slot_to_trg $slot_num}
            trigger}})
   (hide_char_hint
      ($slot_num)
      {{$this slot_to_grp $slot_num}
         set_showing
         FALSE})
   (unload
      {charcreator_panel free_all})}
{new
   UIScreen
   first_band_create_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (my_player_num 0)
   (enter
      {dialog_panel
         set_ok
         {localize_token first_band_create_message}})
   (SELECT_MSG
      {{profile_mgr
            get_mapped_profile_from_player
            [my_player_num]}
         set_first_band_create_done}
      {ui pop_screen})}
{new
   MultiFocusScreen
   matchmaking_band_screen
   (panels meta practice_space_panel matchmaking_band_panel helpbar fx)
   (helpbar
      ())
   (back
      {gamemode get main_mode_screen})
   (auto_join_state kNoAutoJoin)
   (player_panels
      (panel matchmaking_band_panel)
      (slots COOP_SLOTS_ORDER)
      (type
         (player_num
            {gamecfg
               get_player_num_from_slot_num
               [slot_num]})
         (slot_num 0)
         (slot none)
         (option '')
         (current_option
            {cond
               ({session is_busy}
                  waiting)
               ({&&
                     {!
                        {$this is_participating}}
                     {&&
                        {!=
                           [slot]
                           none}
                        {!
                           {gamecfg
                              is_instrument_connected
                              [slot]
                              kGameControllerNotParticipating}}}}
                  no_instrument)
               ({!
                     {$this is_participating}}
                  join)
               ({!
                     {{game
                           get_player_config
                           [player_num]}
                        has_char}}
                  {if_else
                     [choose_gender]
                     choose_gender
                     choose_character})
               {do
                  ($leader_num
                     {gamecfg get leader_num})
                  {if_else
                     {== $leader_num -1}
                     ready_no_leader
                     {if_else
                        {==
                           $leader_num
                           [player_num]}
                        ready_leader
                        ready_not_leader}}}})
         (char_provider '')
         (choose_gender FALSE)
         (enter
            {set
               [choose_gender]
               FALSE}
            {$this update_char_provider})
         MATCHMAKING_LOAD_CHAR_METHODS
         (verify_controller_types
            {if
               {&&
                  {!
                     {session is_busy}}
                  {$this is_participating}
                  {gamecfg
                     is_player_local
                     [player_num]}}
               {do
                  ($pcfg
                     {game
                        get_player_config
                        [player_num]})
                  ($old_instrument
                     {$pcfg get_controller_type})
                  ($new_instrument
                     {game
                        get_controller_type_from_controller
                        [player_num]})
                  {if
                     {!= $old_instrument $new_instrument}
                     {$this remove_player}}}})
         (update_char_hints_grp
            {if_else
               {&&
                  {!
                     {session is_busy}}
                  {gamemode get is_bwt}
                  {==
                     {tour bwtmode}
                     kMetaTour_KnownLocal}
                  {tour performer}
                  {'||'
                     {!
                        {$this is_participating}}
                     {!
                        {{game
                              get_player_config
                              [player_num]}
                           has_char}}}}
               {do
                  ($mini_band_member
                     {{tour performer}
                        get_band_member_for_slot
                        [slot_num]})
                  {if_else
                     {elem $mini_band_member 0}
                     {matchmaking_band_panel
                        show_char_hint
                        [slot_num]
                        {elem $mini_band_member 1}
                        {elem $mini_band_member 2}}
                     {matchmaking_band_panel
                        hide_char_hint
                        [slot_num]}}}
               {do
                  {matchmaking_band_panel
                     hide_char_hint
                     [slot_num]}}})
         (update
            {do
               ($participating
                  {$this is_participating})
               ($leader
                  {&&
                     $participating
                     {$this is_leader}})
               ($remote
                  {&&
                     $participating
                     {!
                        {gamecfg
                           is_player_local
                           [player_num]}}})
               ($has_char
                  {&&
                     $participating
                     {{gamecfg
                           get_player_config
                           [player_num]}
                        has_char}})
               ($has_online
                  {&&
                     $participating
                     {'||'
                        $remote
                        {platform_mgr
                           player_has_online_privilege
                           [player_num]}}})
               ($session_busy
                  {session is_busy})
               ($part_sel FALSE)
               {unless
                  {band_ui_sink is_forced_transition_active}
                  {if_else
                     $leader
                     {$this set draw_order -1.0}
                     {$this set draw_order -2.0}}
                  {slots.grp sort_draws}
                  MATCHMAKING_UPDATE_COMMON}})
         (is_ready
            {'||'
               {!
                  {$this is_participating}}
               {{game
                     get_player_config
                     [player_num]}
                  has_char}})
         (allow_button_msg
            ($player_num)
            {'||'
               {==
                  [slot]
                  none}
               {&&
                  {==
                     [slot]
                     {game get_instrument_from_controller $player_num}}
                  {if_else
                     {&&
                        {==
                           [slot]
                           guitar}
                        {==
                           [slot_num]
                           kGameCoopSlotGuitar0}
                        {==
                           [player_num]
                           -1}
                        {==
                           {{{ui current_screen}
                                 get_panel_from_slot_num
                                 kGameCoopSlotGuitar1}
                              player_num}
                           -1}}
                     {gamecfg is_controller_type_with_lowest_pad_num $player_num kControllerGuitar}
                     TRUE}}})
         (remove_player
            {do
               ($reassign_leader
                  {==
                     {gamecfg get leader_num}
                     [player_num]})
               ($player_num
                  [player_num])
               {session_mgr remove_local_player $player_num}
               {if
                  $reassign_leader
                  {session_mgr update_band_leader}
                  {session update_game_data}}
               {gamecfg set_player_slot_num $player_num -1}}
            {{gamemode get matchmaking_screen}
               export_all
               update})
         (send_focus_msg TRUE)
         (FOCUS_MSG
            {if
               [send_focus_msg]
               {band_ui_sink
                  send_net_focus
                  [player_num]
                  $new_focus}})
         (net_focus
            ($player_num $new_focus_name)
            {set
               [send_focus_msg]
               FALSE}
            {$this
               set_focus
               {$this find $new_focus_name}}
            {set
               [send_focus_msg]
               TRUE})
         (get_char
            {{game
                  get_player_config
                  [player_num]}
               get_char})
         (is_participating
            {&&
               {!=
                  [player_num]
                  -1}
               {game
                  is_player_participating
                  [player_num]}})
         (is_leader
            {&&
               {$this is_participating}
               {==
                  {gamecfg get leader_num}
                  [player_num]}})
         (update_char_provider
            {if
               {!=
                  [player_num]
                  -1}
               {if
                  {&&
                     {$this is_participating}
                     {gamecfg
                        is_player_local
                        [player_num]}}
                  {set
                     [char_provider]
                     {get_char_provider
                        [player_num]}}
                  {[char_provider]
                     save_relative_pos
                     {char.lst selected_pos}}
                  {[char_provider]
                     set_instrument_filter
                     {game
                        get_instrument_from_controller
                        [player_num]}}
                  {char.lst
                     set_provider
                     [char_provider]}
                  {char.lst
                     set_selected
                     {[char_provider]
                        get_saved_pos}}
                  {unless
                     {{gamecfg
                           get_player_config
                           [player_num]}
                        get_char}
                     {$this load_char_from_list}}}})
         (new_local_player
            ($player_num)
            {gamecfg
               set_player_slot_num
               $player_num
               [slot_num]}
            {session_mgr update_band_leader}
            {if
               {==
                  $player_num
                  [player_num]}
               {session_mgr remove_sink $this new_local_player}
               {$this update_char_provider}
               {if_else
                  {gamemode get auto_choose_char}
                  {do
                     ($pcfg
                        {game get_player_config $player_num})
                     ($char
                        {available_prefab
                           $player_num
                           {$pcfg get_controller_sym}})
                     {$pcfg set_char $char}
                     {$this load_char $char}}
                  {$this load_char_from_list}}
               {session_mgr update_band_leader}
               {{gamemode get matchmaking_screen}
                  export_all
                  update}}))
      (options
         (waiting
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  ((kPad_Tri kPad_X)
                     {synth play button_error})}
               TRUE))
         (no_instrument
            (BUTTON_DOWN_MSG TRUE))
         (join
            (init
               {set
                  [choose_gender]
                  FALSE})
            (BUTTON_DOWN_MSG
               {if_else
                  {'||'
                     {session_mgr is_finding}
                     {!=
                        {session mode}
                        kNetLocal}}
                  {do
                     {switch
                        $button
                        ((kPad_Tri kPad_X)
                           {synth play button_error})}
                     TRUE}
                  {switch
                     $button
                     (kPad_Tri
                        {band_ui_sink set invite_accepted FALSE}
                        {synth play button_back}
                        {ui
                           goto_screen
                           {{gamemode get matchmaking_screen}
                              get
                              back}})
                     (kPad_X
                        {cond
                           ({gamecfg is_missing_mic $player_num FALSE}
                              {vocalist_must_have_mic_screen set message band_vocalist_needs_mic}
                              {ui push_screen vocalist_must_have_mic_screen})
                           ({game can_local_player_join $player_num}
                              {synth play button_select}
                              {session_mgr add_sink $this new_local_player}
                              {session_mgr
                                 add_local_player
                                 $player_num
                                 {gamecfg get_controller_type_from_controller $player_num}}
                              {{gamemode get matchmaking_screen}
                                 export_all
                                 update})
                           ({&&
                                 {gamecfg
                                    is_instrument_available
                                    {gamecfg get_instrument_from_controller $player_num}}
                                 {<
                                    {session num_players}
                                    {gamemode get max_local_players}}}
                              {cond
                                 ({&&
                                       {gamemode get online_play_required}
                                       {!
                                          {platform_mgr player_has_online_privilege $player_num}}}
                                    {mm_signin_net_screen set player_num $player_num}
                                    {ui push_screen mm_signin_net_screen})
                                 ({&&
                                       {gamemode get profile_required}
                                       {!
                                          {platform_mgr is_player_signed_in $player_num}}}
                                    {mm_band_signin_screen set player_num $player_num}
                                    {ui push_screen mm_band_signin_screen})
                                 ({&&
                                       {platform_mgr is_player_signed_in $player_num}
                                       {platform_mgr is_player_a_guest $player_num}}
                                    {mm_signin_guest_needs_owner_screen set player_num $player_num}
                                    {ui push_screen mm_signin_guest_needs_owner_screen})
                                 ({!
                                       {platform_mgr is_player_signed_in $player_num}}
                                    {if_else
                                       {gamemode get online_play_required}
                                       {platform_mgr signin 4 1}
                                       {platform_mgr signin 4 0}})
                                 (TRUE
                                    {synth play button_error})})
                           (TRUE
                              {synth play button_error})})}}))
         (choose_character
            (init
               {$this update_char_provider}
               {$this set_focus char.lst})
            (SELECT_START_MSG
               {cond
                  ({[char_provider]
                        is_create_new
                        {$component selected_pos}}
                     {if_else
                        {profile_mgr
                           can_player_create_char
                           [player_num]
                           {{game
                                 get_player_config
                                 [player_num]}
                              get_controller_sym}}
                        {set
                           [choose_gender]
                           TRUE}
                        {ui push_screen mm_band_char_no_room_screen}})
                  ({[char_provider]
                        is_char
                        {$component selected_pos}}
                     {do
                        ($char
                           {[char_provider]
                              get_char
                              {$component selected_pos}})
                        {if_else
                           {&&
                              {gamemode get is_bwt}
                              {'||'
                                 {==
                                    {tour bwtmode}
                                    kMetaTour_StartNew}
                                 {==
                                    {tour bwtmode}
                                    kMetaTour_UnknownRemote}}
                              {!
                                 {profile_mgr can_char_join_band $char}}}
                           {do
                              {mm_at_band_limit_screen
                                 set_char_name
                                 {$char get_char_name}}
                              {ui push_screen mm_at_band_limit_screen}}
                           {do
                              {{game
                                    get_player_config
                                    [player_num]}
                                 set_char
                                 $char}
                              {char_cache
                                 request
                                 [player_num]
                                 $char}
                              {session_mgr update_band_leader}}}})}
               {{gamemode get matchmaking_screen}
                  export_all
                  update}
               kDataUnhandled)
            (SCROLL_MSG
               {$this load_char_from_list})
            (BUTTON_DOWN_MSG
               {if_else
                  {== $button kPad_Tri}
                  {do
                     {synth play button_back}
                     {$this remove_player}}
                  kDataUnhandled}))
         MATCHMAKING_CHOOSE_GENDER
         (ready_no_leader
            (init
               {$this set_focus continue_no_leader.btn})
            (SELECT_START_MSG
               {switch
                  $component
                  (continue_no_leader.btn
                     {if
                        {{gamemode get matchmaking_screen}
                           all_ready}
                        {{gamemode get matchmaking_screen}
                           goto_leader_confirmation}})
                  (choose_char_non_leader.btn
                     {$this release_char})}
               kDataUnhandled)
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  (kPad_Tri
                     {synth play button_back}
                     {$this remove_player})
                  kDataUnhandled}))
         (ready_leader
            (init MM_READY_LEADER_BUTTON_FOCUS)
            (SELECT_START_MSG
               {switch
                  $component
                  (continue.btn
                     {if_else
                        {==
                           {$component get text_token}
                           waiting}
                        {do
                           {synth play button_error}
                           TRUE}
                        {do
                           {if
                              {{gamemode get matchmaking_screen}
                                 all_ready}
                              {{gamemode get matchmaking_screen}
                                 goto_leader_confirmation}}
                           kDataUnhandled}})
                  ((search.btn search_continue.btn)
                     #ifndef _SHIP
                     {if
                        {!=
                           {search.btn get text_token}
                           {search_continue.btn get text_token}}
                        {fail
                           "search.btn and search_continue.btn out of sync\n"}}
                     #endif
                     {switch
                        {search.btn get text_token}
                        ((matchmaker_search_hth matchmaker_search_band)
                           {gamecfg set channel 0}
                           {session_mgr find_players})
                        (matchmaker_find_leader
                           {session_mgr find_leader})
                        (matchmaker_find_bandmates
                           {session_mgr find_bandmates})
                        (matchmaker_find_new_bandmates
                           {gamecfg set channel 0}
                           {session_mgr find_bandmates})
                        (matchmaker_find_new_leader
                           {gamecfg set channel 0}
                           {session_mgr find_leader})
                        (matchmaker_search_cancel
                           {session_mgr cancel_find})
                        ((matchmaker_invite_join_band matchmaker_invite_join_game)
                           {session_mgr join_invite})}
                     kDataUnhandled)
                  (invite.btn
                     #ifdef HX_XBOX
                     {platform_mgr
                        show_friends
                        [player_num]}
                     #else
                     {band_ui_sink set_net_sync FALSE}
                     {ui push_screen invite_friends_screen}
                     #endif
                     kDataUnhandled)
                  (kick.btn
                     {band_ui_sink set_net_sync FALSE}
                     {ui push_screen kick_player_screen}
                     kDataUnhandled)
                  (choose_char.btn
                     {$this release_char}
                     kDataUnhandled)
                  kDataUnhandled})
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  (kPad_Tri
                     {session_mgr cancel_find}
                     {synth play button_back}
                     {$this remove_player}
                     {session_mgr update_band_leader})
                  kDataUnhandled}))
         (ready_not_leader
            (init
               {if
                  {==
                     {session mode}
                     kNetLocal}
                  {$this set_focus choose_char_non_leader.btn}})
            (SELECT_START_MSG
               {switch
                  $component
                  (choose_char_non_leader.btn
                     {$this release_char})}
               kDataUnhandled)
            (BUTTON_DOWN_MSG
               {switch
                  $button
                  (kPad_Tri
                     {synth play button_back}
                     {$this remove_player})
                  kDataUnhandled}))))
   (is_ready
      {if_else
         {&&
            {gamemode get is_bwt}
            {'||'
               {==
                  {tour bwtmode}
                  kMetaTour_UnknownRemote}
               {==
                  {tour bwtmode}
                  kMetaTour_KnownRemote}}}
         TRUE
         {&&
            {>=
               {session num_players}
               {gamemode get min_players}}
            {<=
               {session num_players}
               {gamemode get max_players}}}})
   (BUTTON_DOWN_MSG
      {switch
         $button
         ((kPad_X kPad_Tri)
            {synth play button_error})
         #ifdef HX_XBOX
         (kPad_R1
            {if
               {&&
                  {>
                     {session num_players}
                     0}
                  {gamemode get online_play_required}
                  {gamecfg is_player_participating $player_num}}
               {band_ui_sink set_net_sync FALSE}
               {ui push_screen more_details_screen}})
         #endif
         TRUE})
   (goto_leader_confirmation
      {if_else
         {==
            {gamecfg get leader_num}
            -1}
         {ui push_screen matchmaking_confirm_no_leader_screen}
         {do
            ($name_at_leader_limit '')
            {if
               {gamemode get is_bwt}
               {if
                  {&&
                     {==
                        {tour bwtmode}
                        kMetaTour_StartNew}
                     {is_leader_local}
                     {!
                        {profile_mgr
                           can_char_create_band
                           {gamecfg get leader_num}}}}
                  {do
                     ($leader_pcfg
                        {gamecfg
                           get_player_config
                           {gamecfg get leader_num}})
                     {set
                        $name_at_leader_limit
                        {{$leader_pcfg get_char}
                           get_char_name}}}}}
            {cond
               ({!= $name_at_leader_limit ''}
                  {mm_at_leader_limit_screen set_char_name $name_at_leader_limit}
                  {ui push_screen mm_at_leader_limit_screen})
               (TRUE
                  {if
                     {&&
                        {gamemode get is_bwt}
                        {tour performer}
                        {{tour performer}
                           is_finalized}
                        {{tour performer}
                           is_local}}
                     {{tour performer}
                        update_members}}
                  BAND_MATCHMAKING_INIT_BWT
                  {band_ui_sink
                     sync_screen
                     {gamemode get post_matchmaking_screen}
                     0}
                  {session_mgr
                     send_to_all
                     (game load_all_chars)
                     TRUE}
                  {game load_all_chars})}}})
   (NEW_REMOTE_PLAYER_MSG
      {if
         {==
            {session num_open_slots}
            0}
         {session_mgr cancel_find}}
      {$this export_all update})
   (REMOTE_PLAYER_LEFT_MSG
      {if
         {&&
            {==
               $player_num
               {gamecfg get leader_num}}
            {!
               {session disabled}}}
         {tour clear_performer}
         {session clear}
         {session set_public FALSE}
         {$this export_all update}})
   (change_game_msg
      {$this export_all update})
   (signin_change_waiting FALSE)
   (profile_activated_waiting FALSE)
   (signin_changed
      {unless
         {band_ui_sink is_forced_transition_active}
         {if_else
            {==
               {ui current_screen}
               $this}
            {$this process_signin_change}
            {$this set signin_change_waiting TRUE}}})
   (process_signin_change
      {unless
         {band_ui_sink is_forced_transition_active}
         {foreach_int
            $slot_num
            0
            4
            {do
               ($player_num
                  {$this get_player_num_from_slot_num $slot_num})
               {if
                  {&&
                     {!= $player_num -1}
                     {gamecfg is_player_local $player_num}
                     {platform_mgr has_player_signin_changed $player_num}}
                  {{$this get_panel_from_slot_num $slot_num}
                     remove_player}}}}
         {$this process_post_signin_change}})
   (process_post_signin_change
      {unless
         {band_ui_sink is_forced_transition_active}
         {profile_mgr rebuild_profile_map}
         {if_else
            {autoload_allowed}
            {autoload}
            {profile_mgr purge_old_data}}
         {$this export_all update}})
   (profile_activated_msg
      ($pad_num)
      {unless
         {band_ui_sink is_forced_transition_active}
         {if_else
            {==
               {ui current_screen}
               $this}
            {$this process_post_signin_change}
            {$this set profile_activated_waiting TRUE}}})
   (save_load_all_complete_msg
      {profile_mgr rebuild_profile_map}
      {$this export_all update})
   (JOYPAD_CONNECT_MSG
      {if
         {&&
            {!
               {ui in_transition}}
            {==
               {ui current_screen}
               $this}}
         {$this verify_controllers_and_update}})
   (verify_controllers_and_update
      {$this export_all verify_controller_types}
      {$this export_all update})
   (needs_first_band_create FALSE)
   (enter
      {{gamemode get matchmaking_screen}
         set_showing
         FALSE}
      #ifndef _SHIP
      {if
         {&&
            {gamemode get is_bwt}
            {<
               {tour bwtmode}
               0}}
         {fail
            "It's Band World Tour, but the Tour BWTMode hasn't been set."}}
      #endif
      {session_mgr add_sink $this}
      {memcardmgr add_sink $this save_load_all_complete_msg}
      {profile_mgr add_sink $this profile_activated_msg}
      {game set joining_allowed TRUE}
      {band_ui_sink set handle_remote_player_left FALSE}
      {matchmaking_band_panel hide_waiting}
      {practice_space_panel
         select_cam
         "coop_enter"}
      {gamecfg set coop_intro_category INTRO}
      {profile_mgr rebuild_profile_map}
      {presence_mgr set_assembling_band}
      {band_ui_sink set_net_sync TRUE}
      {band_ui_sink set_controller_level kControllerLevelNone}
      {if
         [needs_first_band_create]
         {set
            [needs_first_band_create]
            FALSE}
         {ui push_screen first_band_create_screen}}
      {set
         [auto_join_state]
         kNoAutoJoin}
      {if
         {&&
            {gamemode get is_bwt}
            {==
               {tour bwtmode}
               kMetaTour_KnownLocal}
            {tour performer}
            {==
               {gamecfg get_num_participants}
               0}}
         {do
            ($leader_char
               {profile_mgr get_leader_char})
            ($leader_instrument
               {$leader_char get_instrument})
            ($leader_slot
               {profile_mgr get_leader_slot})
            ($leader_num
               {profile_mgr get_leader_num})
            {if
               {&&
                  {!= $leader_num -1}
                  {!
                     {gamecfg is_missing_mic $leader_num FALSE}}
                  {game can_local_player_join $leader_num}}
               {set
                  [auto_join_state]
                  kAutoJoinLeader}
               {session_mgr
                  add_sink
                  {$this get_panel_from_slot_num $leader_slot}
                  new_local_player}
               {session_mgr
                  add_local_player
                  $leader_num
                  {gamecfg get_controller_type_from_controller $leader_num}}
               {$this export_all update}}}}
      {char_cache cache_update})
   (on_dismiss_event
      {$this transition_complete '' ''})
   (TRANSITION_COMPLETE_MSG
      {$this export_all verify_controller_types}
      {cond
         ({band_ui_sink has_event})
         ({$this get signin_change_waiting}
            {$this set signin_change_waiting FALSE}
            {$this process_signin_change})
         ({$this get profile_activated_waiting}
            {$this set profile_activated_waiting FALSE}
            {$this process_post_signin_change})
         ({!
               {session is_busy}}
            {if
               {autoload_allowed}
               {autoload}})}
      {$this export_all update})
   (exit
      {$this set signin_change_waiting FALSE}
      {session_mgr remove_sink $this}
      {memcardmgr remove_sink $this save_load_all_complete_msg}
      {profile_mgr remove_sink $this profile_activated_msg}
      {session_mgr cancel_find}
      {session set_invites_allowed FALSE}
      {game set joining_allowed FALSE}
      {band_ui_sink set handle_remote_player_left TRUE}
      {presence_mgr set_prepare_to_rock}
      {synth reset_mics_changed}
      {band_ui_sink set_controller_level kControllerLevelSession})
   (allow_input
      {!
         {session is_busy}})
   (session_busy_msg
      ($is_busy)
      {matchmaking_band_panel
         {if_else $is_busy show_waiting hide_waiting}}
      {if
         {! $is_busy}
         {$this export_all verify_controller_types}
         {$this export_all update}})
   (wait_for_session
      {$this export_all update})
   (session_ready_complete_msg
      ($player_num)
      {$this export_all verify_controller_types}
      {$this export_all update}
      {if
         {==
            [auto_join_state]
            kAutoJoinLeader}
         {$this auto_join_added $player_num}})
   (auto_join_added
      ($player_num)
      {if
         {!=
            [auto_join_state]
            kNoAutoJoin}
         {$this export_all update}
         {do
            ($slot_num
               {gamecfg get_slot_num_from_player_num $player_num})
            ($player_char
               {profile_mgr get_player_char_from_slot $slot_num})
            {{game get_player_config $player_num}
               set_char
               $player_char}
            {char_cache request $player_num $player_char}
            {session_mgr update_band_leader}
            {$this export_all update}
            {set
               [auto_join_state]
               {'+'
                  [auto_join_state]
                  1}}
            {$this auto_join_next_player}}})
   (session_disabled
      {$this export_all update})
   (auto_join_next_player
      {if
         {!=
            [auto_join_state]
            kAutoJoinComplete}
         {do
            ($mini_band_member
               {{tour performer}
                  get_band_member_for_slot
                  [auto_join_state]})
            {if_else
               {elem $mini_band_member 2}
               {do
                  {set
                     [auto_join_state]
                     {'+'
                        1
                        [auto_join_state]}}
                  {$this auto_join_next_player}}
               {do
                  ($player_char
                     {profile_mgr
                        get_player_char_from_slot
                        [auto_join_state]})
                  ($player_num
                     {profile_mgr
                        get_player_num_from_slot
                        [auto_join_state]})
                  {if_else
                     {&&
                        $player_char
                        {!= $player_num -1}
                        {!
                           {gamecfg is_missing_mic $player_num FALSE}}
                        {game can_local_player_join $player_num}}
                     {do
                        {session_mgr
                           add_sink
                           {$this
                              get_panel_from_slot_num
                              [auto_join_state]}
                           new_local_player}
                        {session_mgr
                           add_local_player
                           $player_num
                           {gamecfg get_controller_type_from_controller $player_num}}
                        {{gamemode get matchmaking_screen}
                           auto_join_added
                           $player_num}
                        {$this export_all update}}
                     {do
                        {set
                           [auto_join_state]
                           {'+'
                              [auto_join_state]
                              1}}
                        {$this auto_join_next_player}}}}}}})}
{new
   UIScreen
   matchmaking_confirm_no_leader_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
      {dialog_panel
         set_yesno
         {localize_token matchmaker_confirm_no_leader}
         yes.btn})
   (SELECT_MSG
      {switch
         $component
         (yes.btn
            {if
               {&&
                  {tour performer}
                  {{tour performer}
                     is_finalized}
                  {{tour performer}
                     is_local}}
               {{tour performer}
                  update_members}}
            BAND_MATCHMAKING_INIT_BWT
            {ui
               pop_screen
               {gamemode get post_matchmaking_screen}}
            {session_mgr
               send_to_all
               (game load_all_chars)
               TRUE}
            {game load_all_chars})
         (no.btn
            {ui pop_screen})})}
{new
   UIScreen
   mm_band_char_no_room_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
      {dialog_panel
         set_ok
         {sprintf
            {localize_token charcreator_no_more_chars_fmt}
            {profile_mgr get_max_chars_per_inst}}})
   (SELECT_MSG
      {ui pop_screen})}
{new
   UIScreen
   mm_at_leader_limit_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (char_name '')
   (set_char_name
      ($char_name)
      {mm_at_leader_limit_screen set char_name $char_name})
   (enter
      {dialog_panel
         set_ok
         {sprintf
            {localize_token matchmaker_at_leader_limit_fmt}
            [char_name]
            {profile_mgr get_max_leaders_per_char}}})
   (SELECT_MSG
      {ui pop_screen})}
{new
   UIScreen
   mm_at_band_limit_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (char_name '')
   (set_char_name
      ($char_name)
      {mm_at_band_limit_screen set char_name $char_name})
   (enter
      {dialog_panel
         set_ok
         {sprintf
            {localize_token matchmaker_at_band_limit_fmt}
            [char_name]
            {profile_mgr get_max_bands_per_char}}})
   (SELECT_MSG
      {ui pop_screen})}
{new
   UIScreen
   mm_band_signin_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS
   (enter
      {dialog_panel
         set_custom
         {localize mm_need_a_profile_tour_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_cancel}
         opt1.btn}
      MATCHMAKING_POPUP_ENTER)
   (SELECT_MSG
      {switch
         $component
         (opt1.btn
            {platform_mgr signin 4 0})
         (opt2.btn
            {ui pop_screen})})}
{new
   UIScreen
   mm_signin_net_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS
   (enter
      {dialog_panel
         set_custom
         {localize mm_need_a_profile_net_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_cancel}
         opt1.btn}
      MATCHMAKING_POPUP_ENTER)
   (SELECT_MSG
      {switch
         $component
         (opt1.btn
            {platform_mgr signin 4 1})
         (opt2.btn
            {ui pop_screen})})}
{new
   UIScreen
   mm_signin_guest_needs_owner_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS
   (enter
      {dialog_panel
         set_custom
         {localize mm_need_a_profile_band_guest_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_cancel}
         opt2.btn}
      MATCHMAKING_POPUP_ENTER)
   (SELECT_MSG
      {switch
         $component
         (opt1.btn
            {platform_mgr
               signin
               4
               {gamemode get online_play_required}})
         (opt2.btn
            {ui pop_screen})})}