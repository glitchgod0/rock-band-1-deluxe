#define MODIFIER_DATA
((os_spd os_gp os_vis os_nocrowd))
#define OVERSHELL_LIST_FILE
((file practice_sel_section.milo)
 (focus sel_section.lst))
{new
   MultiSelectListPanel
   overshell_main_panel
   OVERSHELL_LIST_FILE
   (enter
      {sel_section.lst set_data MODIFIER_DATA}
      {if $modifierpos
         {sel_section.lst set_selected $modifierpos}
      }
      {title.lbl
         set_localized {localize os_dxsettings}}
      {$this pause_if_local})
   (exit)
   (SELECT_START_MSG
      {switch {$component selected_sym}
         (os_nocrowd
            {set $nocrowd {! $nocrowd}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {sel_section.lst set_data MODIFIER_DATA}
            {if $modifierpos
               {sel_section.lst set_selected $modifierpos}
            }
         )
         (os_spd
            {ui push_screen options_milo_screen}
         )
         (os_gp
            {ui push_screen overshell_gameplay_screen}
         )
         (os_vis
            {ui push_screen overshell_visual_screen}
         )
      }
   )
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen splash_screen}
         }
         {ui pop_screen}
         {set $modifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_main_screen
   (panels overshell_main_panel options_lower3rd_panel)
   (focus overshell_main_panel)}

#define GP_MODIFIER_DATA
((os_nofail))
{new
   MultiSelectListPanel
   overshell_gameplay_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl
         set_localized {localize os_gp}}
      {$this pause_if_local})
   (exit)
   (SELECT_START_MSG
      {switch {$component selected_sym}
         (os_nofail
            {set $nofail {! $nofail}}
            {set $gpmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
      }
   )
   (lst_reset
   {sel_section.lst set_data GP_MODIFIER_DATA}
   {if $gpmodifierpos
      {sel_section.lst set_selected $gpmodifierpos}
   }
   )
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {ui goto_screen overshell_main_screen}
         {ui pop_screen}
         {set $gpmodifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gameplay_screen
   (panels overshell_gameplay_panel options_lower3rd_panel)
   (focus overshell_gameplay_panel)}

#define VIS_MODIFIER_DATA
((os_blackbg os_noflames os_songtitle))
{new
   MultiSelectListPanel
   overshell_visual_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl
         set_localized {localize os_vis}}
      {$this pause_if_local})
   (exit)
   (SELECT_START_MSG
      {switch {$component selected_sym}
         (os_songtitle
            {set $songtitle {! $songtitle}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_blackbg
            {set $blackbg {! $blackbg}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_noflames
            {set $noflames {! $noflames}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data VIS_MODIFIER_DATA}
   {if $vismodifierpos
      {sel_section.lst set_selected $vismodifierpos}
   })
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {ui goto_screen overshell_main_screen}
         {ui pop_screen}
         {set $vismodifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_visual_screen
   (panels overshell_visual_panel options_lower3rd_panel)
   (focus overshell_visual_panel)}
{new
   UIPanel
   options_milo_panel
   (file
      "options_audio.milo")
   (focus instruments.btn)
   (signin_change_waiting FALSE)
   (load
      {content_mgr start_refresh})
   (is_loaded
      {content_mgr refresh_done})
   (enter
      {$this pause_if_local}
      ;{mono.btn set_showing TRUE}
      ;{$this enable mono.btn}
      ; {vocal_options.btn get_local_pos $labelpos_x $labelpos_y $labelpos_z}
      ; {vocal_options.btn set_local_pos {+ $labelpos_x 75} $labelpos_y $labelpos_z}
      {instruments.sld set_num_steps 41} ;number of steps for note speed slider
      {background.sld set_num_steps 31} ;number of steps for song speed slider
      {crowd.sld set_num_steps 60} ;number of steps for venue fps slider
      {instruments.sld set_current {int {+ 0.5 {/ {+ {- $trackspeed 1} 0.5} 0.05}}}} ;set note speed slider based on current value
      {background.sld set_current {int {+ 0.5 {/ {- $speedmod 1} 0.05}}}} ;set song speed slider based on current value
      {crowd.sld set_current {int {- $emulatefps 1}}} ;set FPS slider based on current value
      {instruments.btn set_localized {sprintf {localize trackspeed_msg} {int {+ 0.5 {* $trackspeed 100}}}}} ;set note speed msg
      {background_music.btn set_localized {sprintf {localize speed_msg} {int {+ 0.5 {* $speedmod 100}}}}} ;set song speed msg
      {crowd.btn set_localized {sprintf {localize fps_msg} {int $emulatefps}}} ;set venue fps msg
      ;{doubly.btn set_localized {localize nofail}}
      ;{bass_boost.btn set_localized {localize blackbg}}
      ;{mono.btn set_localized {localize nocrowd}}
      {$this update_all_from_profile}
      {session add_sink $this signin_changed}
      {memcardmgr add_sink $this save_load_all_complete_msg}
      {helpbar
         set_limit_to_player_num
         {options_audio_screen get player_num}}
      {bg_name.mesh set_showing FALSE}
      {gamertag.lbl set_showing FALSE}
      {instrument.lbl set_showing FALSE}
      {audio_options.lbl set_localized {localize milosliderlbl}}
      ;{vocal_options.btn set_localized {localize gameplay_options}} ; no longer needed as gameplay is back in it's original place
      {sfx.btn set_showing FALSE}
      {$this disable sfx.btn}
      {bass_boost.btn set_showing FALSE}
      {$this disable bass_boost.btn}
      {doubly.btn set_showing FALSE}
      {$this disable doubly.btn}
      {sfx.sld set_showing FALSE}
      {$this disable vocal_options.btn}
      {vocal_options.btn set_showing FALSE})
   (display_trackspeed_msg
      ($tspd)
      {instruments.btn set_localized {sprintf {localize trackspeed_msg} {int {+ 0.5 {* $tspd 100}}}}})
   (display_speed_msg
      ($mspd)
     {background_music.btn set_localized {sprintf {localize speed_msg} {int {+ 0.5 {* $mspd 100}}}}})
   (display_fps_msg
      ($fps)
     {crowd.btn set_localized {sprintf {localize fps_msg} {int $fps}}}) ;don't add 1 here because this is being fed the actual fps
   (exit
      {ui pop_screen})
   (save_load_all_complete_msg
      {$this update_all_from_profile})
   (FOCUS_MSG
      {switch
         $new_focus
         (vocal_options.btn
            {helpbar
               set_config
               (helpbar_back helpbar_select)})
         ((background.btn crowd.btn instruments.btn sfx.btn)
            {helpbar
               set_config
               (helpbar_back helpbar_changesetting)})
         ((background.lsd crowd.sld instruments.sld sfx.sld)
            {helpbar
               set_config
               (helpbar_cancel helpbar_confirmsetting)})
         ((bass_boost.btn doubly.btn mono.btn)
            {$this update_check_help $new_focus})})
   (SCROLL_SELECT_MSG
      {if_else
         $selected
         {helpbar
            set_config
            (Cancel OK)}
         {helpbar
            set_config
            (helpbar_back Select)}}
      {$this on_slider_change $component})
   (SCROLL_MSG
      {$this on_slider_change $component})
   (SELECT_MSG
      {switch
         $component
         (bass_boost.btn
            {set $blackbg {! $blackbg}}
               {$this
                  update_from_profile
                  {$this find bass_check.mesh}}
               {$this update_check_help $component})
         (doubly.btn
            {set $nofail {! $nofail}}
               {$this
                  update_from_profile
                  {$this find doubly_check.mesh}}
               {$this update_check_help $component})
         (vocal_options.btn
            {options_gameplay_screen set player_num $player_num}
            {warn_no_signin_goto_screen options_gameplay_screen $player_num})
         (instruments.btn
            {instruments.sld store}
            {$this set_focus instruments.sld})
         (background_music.btn
            {background.sld store}
            {$this set_focus background.sld})
         (crowd.btn
            {crowd.sld store}
            {$this set_focus crowd.sld})
         (sfx.btn
            {sfx.sld store}
            {$this set_focus sfx.sld})
         (mono.btn
            {set $nocrowd {! $nocrowd}}
               {$this
                  update_from_profile
                  {$this find mono_check.mesh}}
               {$this update_check_help $component})
         })
   (BUTTON_DOWN_MSG
      {switch
         {$this focus_name}
         (instruments.sld
            {switch
               $button
               (kPad_X
                  {instruments.sld confirm}
                  {$this set_focus instruments.btn})
               (kPad_Tri
                  {instruments.sld undo $player_num}
                  {$this set_focus instruments.btn})
               kDataUnhandled})
         (background.sld
            {switch
               $button
               (kPad_X
                  {background.sld confirm}
                  {$this set_focus background_music.btn})
               (kPad_Tri
                  {background.sld undo $player_num}
                  {$this set_focus background_music.btn})
               kDataUnhandled})
         (crowd.sld
            {switch
               $button
               (kPad_X
                  {crowd.sld confirm}
                  {$this set_focus crowd.btn})
               (kPad_Tri
                  {crowd.sld undo $player_num}
                  {$this set_focus crowd.btn})
               kDataUnhandled})
         (sfx.sld
            {switch
               $button
               (kPad_X
                  {sfx.sld confirm}
                  {$this set_focus sfx.btn})
               (kPad_Tri
                  {sfx.sld undo $player_num}
                  {$this set_focus sfx.btn})
               kDataUnhandled})
         kDataUnhandled})
   (set_speeds
         {do
            {set $trackspeed {- {+ 1 {* {instruments.sld current} 0.05}} 0.5}}
            {set $speedmod
               {+ 1 {* {background.sld current} 0.05}}}
            {set $emulatefps
               {+ 1 {crowd.sld current}}}
         {set $leaderspeed $speedmod}}
         {set $leaderspeed $speedmod}
         {$this display_trackspeed_msg $trackspeed}
         {$this display_speed_msg $speedmod}
         {$this display_fps_msg $emulatefps})
   (on_slider_change
      ($component)
      {switch
         $component
         (instruments.sld
               {do {set $component current}}
            {$this set_speeds})
         (background.sld
               {do {set $component current}}
            {$this set_speeds})
         (crowd.sld
               {do {set $component current}}
               {$this set_speeds})
         ;(sfx.sld
         ;   {profile_mgr
         ;      set_fx_volume
         ;      {$component current}}
         ;   {play_game_seq slider_sfx.cue})
         })
   (update_all_from_profile
      {$this
         iterate
         UISlider
         $s
         {$this update_from_profile $s}}
      {$this
         update_from_profile
         {$this find bass_check.mesh}}
      {$this
         update_from_profile
         {$this find doubly_check.mesh}}
      {$this
         update_from_profile
         {$this find mono_check.mesh}})
   (update_from_profile
      ($component)
      {switch
         $component
         (instruments.sld
            {$component
               set_current
               {int {+ 0.5 {/ {+ {- $trackspeed 1} 0.5} 0.05}}}})
         (background.sld
            {$component
               set_current
               {int {+ 0.5 {/ {- $speedmod 1} 0.05}}}})
         (crowd.sld
            {$component
               set_current
               {int {- $emulatefps 1}}})
         ;(sfx.sld
          ;  {$component
           ;    set_current
            ;   {profile_mgr get_fx_volume}})
         (bass_check.mesh
            {{$this find bass_check.mesh}
               set_showing
               FALSE})
         (doubly_check.mesh
            {{$this find doubly_check.mesh}
               set_showing
               FALSE})
;         (mono_check.mesh
;            {{$this find mono_check.mesh}
;               set_showing
;               $nocrowd})
         })
   (update_check_help
      ($component)
      {switch
         $component
         (bass_boost.btn
            {helpbar
               set_config
               (helpbar_back helpbar_toggleoption)})
         (doubly.btn
            {helpbar
               set_config
               (helpbar_back helpbar_toggleoption)})
         (mono.btn
            {helpbar
               set_config
               (helpbar_back helpbar_toggleoption)})
         })
   (SIGNIN_CHANGED_MSG
      {if_else
         {==
            {ui current_screen}
            options_audio_screen}
         {$this process_signin_change}
         {if
            {!
               {option_profile_change_warning_screen is_up}}
            {$this set signin_change_waiting TRUE}}})
   (TRANSITION_COMPLETE_MSG COMMON_TRANSITION_HANDLERS_FOR_SIGN_OUT)
   (process_signin_change
      {if
         {==
            {ui current_screen}
            options_audio_screen}
         {ui push_screen option_profile_change_warning_screen}})}
{new
   UIScreen
   options_milo_screen
   (panels options_milo_panel)
   (focus options_milo_panel)
   (back overshell_main_screen)
   (helpbar
      (helpbar_back helpbar_select))
   (player_num -1)
   (BUTTON_DOWN_MSG
      kDataUnhandled)
   (TRANSITION_COMPLETE_MSG
      {autoload})}