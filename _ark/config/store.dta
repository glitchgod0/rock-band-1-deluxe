#ifdef HX_XBOX
(netcache_init
   "netcache"
   store_cache_name
   512
   204800
   "Quazal"
   1161889836
   ""
   1000
   "/hmx/live/"
   ""
   1000
   "/hmx/test/")
#else
#ifdef HX_PS3
(netcache_init
   "netcache"
   ''
   512
   204800
   ""
   0
   "ps3-meta.rockband.com"
   443
   "/"
   "ps3-meta.rockband.com"
   443
   "/")
(service_id
   (test
      "UD2464-NPXX00202_00")
   (live
      "UP0006-BLUS30050_00"))
#else
(netcache_init
   "netcache"
   ''
   512
   204800
   ""
   0
   ""
   0
   "/"
   ""
   0
   "test/remote_metadata")
#endif
#endif
#define STORE_MAX_EASY_TIER
(1)
#define STORE_MAX_MEDIUM_TIER
(6)
#define STORE_PART_SYMBOLS
(band guitar drum vocals bass)
#define STORE_ALPHA_SYMBOLS
(store_nonalpha_group A B C D E F G H I J K L M N O P Q R S T U V W X Y Z)
(filters
   (new_releases
      (include
         ($offer $selected_filter)
         {&&
            {$offer is_new_release}
            {'||'
               {!=
                  {$offer offer_type}
                  song}
               {&&
                  {!
                     {store_panel find_pack $offer}}
                  {!
                     {store_panel find_album $offer}}}}})
      (sorts by_artist_new_release)
      (allow_shortcut FALSE)
      (show_new_release FALSE))
   (all_artists
      (include
         ($offer $selected_filter)
         {==
            {$offer offer_type}
            song})
      (sorts by_artist by_song by_difficulty by_genre by_year)
      (allow_shortcut TRUE)
      (sort_difficulty_part band)
      (show_new_release TRUE))
   (all_song_packs
      (include
         ($offer $selected_filter)
         {==
            {$offer offer_type}
            pack})
      (sorts by_pack)
      (allow_shortcut TRUE)
      (show_new_release TRUE))
   (all_albums
      (include
         ($offer $selected_filter)
         {==
            {$offer offer_type}
            album})
      (sorts by_artist_album)
      (allow_shortcut TRUE)
      (show_new_release TRUE)))
(sorts
   (by_artist_new_release
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            artist
            $lhs
            $rhs
            {$this cmp name $lhs $rhs}})
      (cmp_song_to_album
         ($lhs $rhs)
         {$this cmp artist $lhs $rhs -1})
      (cmp_song_to_pack
         ($lhs $rhs)
         {if_else
            {$rhs has_data artist}
            {$this cmp artist $lhs $rhs -1}
            -1})
      (cmp_album_to_album
         ($lhs $rhs)
         {$this
            cmp
            artist
            $lhs
            $rhs
            {$this
               cmp
               year_released
               $lhs
               $rhs
               FALSE
               {$this cmp name $lhs $rhs}}})
      (cmp_album_to_pack
         ($lhs $rhs)
         {if_else
            {$rhs has_data artist}
            {$this cmp artist $lhs $rhs -1}
            -1})
      (cmp_pack_to_pack
         ($lhs $rhs)
         {if_else
            {$lhs has_data artist}
            {if_else
               {$rhs has_data artist}
               {$this
                  cmp
                  artist
                  $lhs
                  $rhs
                  {$this cmp pack_name $lhs $rhs}}
               -1}
            {if_else
               {$rhs has_data artist}
               1
               {$this cmp pack_name $lhs $rhs}}})
      (browser_group
         ($offer)
         {if_else
            {$offer has_data artist}
            {$offer
               get_data
               (artist)}
            store_various_artists})
      (browser_cover
         ($offer)
         {$offer is_cover}))
   (by_artist
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            artist
            $lhs
            $rhs
            {$this cmp name $lhs $rhs}})
      (browser_group
         ($offer)
         {$offer
            get_data
            (artist)})
      (browser_cover
         ($offer)
         {$offer is_cover}))
   (by_song
      (cmp_song_to_song
         ($lhs $rhs)
         {$this cmp name $lhs $rhs})
      (browser_group
         ($offer)
         {$offer first_char name FALSE})
      (shortcut_groups STORE_ALPHA_SYMBOLS))
   (by_artist_album
      (cmp_album_to_album
         ($lhs $rhs)
         {$this
            cmp
            artist
            $lhs
            $rhs
            {$this
               cmp
               year_released
               $lhs
               $rhs
               FALSE
               {$this cmp name $lhs $rhs}}})
      (browser_group
         ($offer)
         {$offer
            get_data
            (artist)})
      (browser_cover
         ($offer)
         {$offer is_cover}))
   (by_pack
      (cmp_pack_to_pack
         ($lhs $rhs)
         {$this cmp pack_name $lhs $rhs})
      (browser_group
         ($offer)
         {$offer first_char name TRUE})
      (shortcut_groups STORE_ALPHA_SYMBOLS))
   (by_difficulty
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            rank
            $lhs
            $rhs
            {store_panel sort_difficulty_part}
            {$this
               cmp
               artist
               $lhs
               $rhs
               {$this cmp name $lhs $rhs}}})
      (browser_group
         ($offer)
         {do
            ($part
               {store_panel sort_difficulty_part})
            ($tier
               {song_mgr
                  rank_tier
                  {$offer
                     get_data
                     (rank $part)}
                  $part})
            ($rankings
               {find $syscfg song_groupings rank})
            {elem
               {find
                  {elem
                     $rankings
                     {'+' $tier 1}}
                  $part}
               1}}))
   (by_genre
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            genre
            $lhs
            $rhs
            {$this
               cmp
               artist
               $lhs
               $rhs
               {$this cmp name $lhs $rhs}}})
      (browser_group
         ($offer)
         {$offer genre}))
   (by_year
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            year_released
            $lhs
            $rhs
            TRUE
            {$this
               cmp
               artist
               $lhs
               $rhs
               {$this cmp name $lhs $rhs}}})
      (browser_group
         ($offer)
         {sprint
            {$offer year_released}})
      (sub by_artist)))